{"version":3,"sources":["node_modules/php-wasm/PhpBase.js","node_modules/php-wasm/PhpWeb.js","node_modules/php-wasm/UniqueIndex.js","node_modules/php-wasm/php-web.js","node_modules/process/browser.js","source/initialize.js","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":["PHP","require","PhpWeb","document","addEventListener","input","querySelector","stdret","stdout","stderr","run","status","editor","ace","edit","ret","exitBox","exitLabel","persistBox","getElementById","singleBox","session","setMode","setTheme","innerText","php","query","URLSearchParams","location","search","event","firstChild","remove","code","getValue","length","set","encodeURIComponent","checked","history","replaceState","title","toString","console","log","func","replace","then","row","createElement","setAttribute","classList","add","append","detail","join","style","display","target","has","setValue","decodeURIComponent","get","selection","moveCursorFileStart","moveCursorFileEnd","WebSocket","window","MozWebSocket","br","brunch","ar","disabled","_ar","cacheBuster","url","date","Math","round","Date","now","indexOf","browser","navigator","userAgent","toLowerCase","forceRepaint","reloaders","page","reload","stylesheet","slice","call","querySelectorAll","filter","link","val","getAttribute","href","forEach","setTimeout","body","offsetHeight","javascript","scripts","textScripts","map","script","text","srcScripts","src","loaded","all","onLoad","eval","newScript","async","onload","head","appendChild","port","host","server","hostname","connect","connection","onmessage","message","data","reloader","onerror","readyState","close","onclose"],"mappingsvrrtiBAAD,CAAP,CAA2BC,MAAvC;;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AAEzD,MAAMC,KAAK,GAAIF,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,CAAf;AACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACG,aAAT,CAAuB,iBAAvB,CAAf;AACA,MAAME,MAAM,GAAGL,QAAQ,CAACG,aAAT,CAAuB,iBAAvB,CAAf;AACA,MAAMG,MAAM,GAAGN,QAAQ,CAACG,aAAT,CAAuB,iBAAvB,CAAf;AACA,MAAMI,GAAG,GAAMP,QAAQ,CAACG,aAAT,CAAuB,YAAvB,CAAf;AACA,MAAMK,MAAM,GAAGR,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAAf;AACA,MAAMM,MAAM,GAAGC,GAAG,CAACC,IAAJ,CAAST,KAAT,CAAf;AACA,MAAMU,GAAG,GAAMZ,QAAQ,CAACG,aAAT,CAAuB,MAAvB,CAAf;AAEA,MAAMU,OAAO,GAAMb,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAnB;AACA,MAAMW,SAAS,GAAID,OAAO,CAACV,aAAR,CAAsB,MAAtB,CAAnB;AACA,MAAMY,UAAU,GAAGf,QAAQ,CAACgB,cAAT,CAAwB,SAAxB,CAAnB;AACA,MAAMC,SAAS,GAAIjB,QAAQ,CAACgB,cAAT,CAAwB,mBAAxB,CAAnB;AAEAP,QAAM,CAACS,OAAP,CAAeC,OAAf,CAAuB,cAAvB;AACAV,QAAM,CAACW,QAAP,CAAgB,mBAAhB;AAEAZ,QAAM,CAACa,SAAP,GAAmB,qBAAnB;AACA,MAAMC,GAAG,GAAG,IAAIzB,GAAJ,EAAZ;AAEA,MAAM0B,KAAK,GAAG,IAAIC,eAAJ,CAAoBC,QAAQ,CAACC,MAA7B,CAAd;AAEAJ,KAAG,CAACrB,gBAAJ,CAAqB,OAArB,EAA8B,UAAC0B,KAAD,EAAW;AACxCnB,UAAM,CAACa,SAAP,GAAmB,iBAAnB;AAEAd,OAAG,CAACN,gBAAJ,CAAqB,OAArB,EAA8B,YAAM;AAEnCO,YAAM,CAACa,SAAP,GAAmB,cAAnB;;AAEA,aAAMhB,MAAM,CAACuB,UAAb,EACA;AACCvB,cAAM,CAACuB,UAAP,CAAkBC,MAAlB;AACA;;AAED,aAAMvB,MAAM,CAACsB,UAAb,EACA;AACCtB,cAAM,CAACsB,UAAP,CAAkBC,MAAlB;AACA;;AAED,aAAMzB,MAAM,CAACwB,UAAb,EACA;AACCxB,cAAM,CAACwB,UAAP,CAAkBC,MAAlB;AACA;;AAED,UAAIC,IAAI,GAAGrB,MAAM,CAACS,OAAP,CAAea,QAAf,EAAX;;AAEA,UAAGD,IAAI,CAACE,MAAL,GAAc,IAAjB,EACA;AACCT,aAAK,CAACU,GAAN,CAAU,MAAV,EAAkBC,kBAAkB,CAACJ,IAAD,CAApC;AACAP,aAAK,CAACU,GAAN,CAAU,SAAV,EAAqBlB,UAAU,CAACoB,OAAX,GAAqB,CAArB,GAAyB,CAA9C;AACAC,eAAO,CAACC,YAAR,CAAqB,EAArB,EAAyBrC,QAAQ,CAACsC,KAAlC,EAAyC,MAAMf,KAAK,CAACgB,QAAN,EAA/C;AACA,OA1BkC,CA4BnC;;;AAEAC,aAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,UAAMY,IAAI,GAAGzB,SAAS,CAACkB,OAAV,GACV,MADU,GAEV,KAFH;;AAIA,UAAGlB,SAAS,CAACkB,OAAb,EACA;AACCL,YAAI,GAAGA,IAAI,CAACa,OAAL,CAAa,YAAb,EAA2B,EAA3B,CAAP;AACAb,YAAI,GAAGA,IAAI,CAACa,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;AACA;;AAEDH,aAAO,CAACC,GAAR,CAAYC,IAAZ;AAEApB,SAAG,CAACoB,IAAD,CAAH,CAAUZ,IAAV,EAAgBc,IAAhB,CAAqB,UAAAhC,GAAG,EAAE;AAEzB,YAAG,CAACK,SAAS,CAACkB,OAAd,EACA;AACCrB,mBAAS,CAACO,SAAV,GAAsBT,GAAtB;AACA;;AAEDJ,cAAM,CAACa,SAAP,GAAmB,iBAAnB;AAEA,YAAMwB,GAAG,GAAG7C,QAAQ,CAAC8C,aAAT,CAAuB,KAAvB,CAAZ;AAEAD,WAAG,CAACxB,SAAJ,GAAgBT,GAAhB;AACAiC,WAAG,CAACE,YAAJ,CAAiB,UAAjB,EAA6B,CAAC,CAA9B;AAEAF,WAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,KAAlB;AAEA7C,cAAM,CAAC8C,MAAP,CAAcL,GAAd;AAEA,OAlBD;AAoBA,KAhED;AAiEA,GApED;AAsEAvB,KAAG,CAACrB,gBAAJ,CAAqB,QAArB,EAA+B,UAAC0B,KAAD,EAAW;AAEzCa,WAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,KAAtB;AAEA,QAAMkB,GAAG,GAAG7C,QAAQ,CAAC8C,aAAT,CAAuB,KAAvB,CAAZ;AAEAD,OAAG,CAACxB,SAAJ,GAAgBM,KAAK,CAACwB,MAAN,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AACAP,OAAG,CAACE,YAAJ,CAAiB,UAAjB,EAA6B,CAAC,CAA9B;AAEAF,OAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,KAAlB;AAEA5C,UAAM,CAAC6C,MAAP,CAAcL,GAAd;AACA,GAZD;AAcAvB,KAAG,CAACrB,gBAAJ,CAAqB,OAArB,EAA8B,UAAC0B,KAAD,EAAW;AAExCa,WAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBd,KAArB;AAEA,QAAMkB,GAAG,GAAG7C,QAAQ,CAAC8C,aAAT,CAAuB,KAAvB,CAAZ;AAEAD,OAAG,CAACxB,SAAJ,GAAgBM,KAAK,CAACwB,MAAN,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AACAP,OAAG,CAACE,YAAJ,CAAiB,UAAjB,EAA6B,CAAC,CAA9B;AAEAF,OAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,KAAlB;AAEA3C,UAAM,CAAC4C,MAAP,CAAcL,GAAd;AACA,GAZD;AAcAjC,KAAG,CAACyC,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AAEArC,WAAS,CAAChB,gBAAV,CAA2B,OAA3B,EAAoC,UAAA0B,KAAK,EAAE;AAE1C,QAAGA,KAAK,CAAC4B,MAAN,CAAapB,OAAhB,EACA;AACCtB,aAAO,CAACwC,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACA1C,SAAG,CAACyC,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACA,KAJD,MAMA;AACCzC,aAAO,CAACwC,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACA1C,SAAG,CAACyC,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACA;;AAEDd,WAAO,CAACC,GAAR,CAAY7B,GAAZ,EAAiBe,KAAK,CAAC4B,MAAN,CAAapB,OAA9B;AAEA,GAfD;AAiBArB,WAAS,CAACO,SAAV,GAAsB,GAAtB;;AAEA,MAAGE,KAAK,CAACiC,GAAN,CAAU,MAAV,CAAH,EACA;AACC/C,UAAM,CAACgD,QAAP,CAAgBC,kBAAkB,CAACnC,KAAK,CAACoC,GAAN,CAAU,MAAV,CAAD,CAAlC;AACAlD,UAAM,CAACmD,SAAP,CAAiBC,mBAAjB;AACA,GAJD,MAMA;AACCpD,UAAM,CAACgD,QAAP;AAMAhD,UAAM,CAACmD,SAAP,CAAiBE,iBAAjB;AACA;AAGD,CAhKD;;;;;;;;;ACJA;AACA,CAAC,YAAW;AACV,MAAIC,SAAS,GAAGC,MAAM,CAACD,SAAP,IAAoBC,MAAM,CAACC,YAA3C;AACA,MAAIC,EAAE,GAAGF,MAAM,CAACG,MAAP,GAAiBH,MAAM,CAACG,MAAP,IAAiB,EAA3C;AACA,MAAIC,EAAE,GAAGF,EAAE,CAAC,aAAD,CAAF,GAAqBA,EAAE,CAAC,aAAD,CAAF,IAAqB,EAAnD;AACA,MAAI,CAACH,SAAD,IAAcK,EAAE,CAACC,QAArB,EAA+B;AAC/B,MAAIL,MAAM,CAACM,GAAX,EAAgB;AAChBN,QAAM,CAACM,GAAP,GAAa,IAAb;;AAEA,MAAIC,WAAW,GAAG,SAAdA,WAAc,CAASC,GAAT,EAAa;AAC7B,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,EAA8BtC,QAA9B,EAAX;AACAiC,OAAG,GAAGA,GAAG,CAAC7B,OAAJ,CAAY,yBAAZ,EAAuC,EAAvC,CAAN;AACA,WAAO6B,GAAG,IAAIA,GAAG,CAACM,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAAlC,CAAH,GAA2C,cAA3C,GAA4DL,IAAnE;AACD,GAJD;;AAMA,MAAIM,OAAO,GAAGC,SAAS,CAACC,SAAV,CAAoBC,WAApB,EAAd;AACA,MAAIC,YAAY,GAAGf,EAAE,CAACe,YAAH,IAAmBJ,OAAO,CAACD,OAAR,CAAgB,QAAhB,IAA4B,CAAC,CAAnE;AAEA,MAAIM,SAAS,GAAG;AACdC,QAAI,EAAE,gBAAU;AACdrB,YAAM,CAACvC,QAAP,CAAgB6D,MAAhB,CAAuB,IAAvB;AACD,KAHa;AAKdC,cAAU,EAAE,sBAAU;AACpB,SAAGC,KAAH,CACGC,IADH,CACQzF,QAAQ,CAAC0F,gBAAT,CAA0B,sBAA1B,CADR,EAEGC,MAFH,CAEU,UAASC,IAAT,EAAe;AACrB,YAAIC,GAAG,GAAGD,IAAI,CAACE,YAAL,CAAkB,iBAAlB,CAAV;AACA,eAAOF,IAAI,CAACG,IAAL,IAAaF,GAAG,IAAI,OAA3B;AACD,OALH,EAMGG,OANH,CAMW,UAASJ,IAAT,EAAe;AACtBA,YAAI,CAACG,IAAL,GAAYxB,WAAW,CAACqB,IAAI,CAACG,IAAN,CAAvB;AACD,OARH,EADoB,CAWpB;;AACA,UAAIZ,YAAJ,EAAkBc,UAAU,CAAC,YAAW;AAAEjG,gBAAQ,CAACkG,IAAT,CAAcC,YAAd;AAA6B,OAA3C,EAA6C,EAA7C,CAAV;AACnB,KAlBa;AAoBdC,cAAU,EAAE,sBAAU;AACpB,UAAIC,OAAO,GAAG,GAAGb,KAAH,CAASC,IAAT,CAAczF,QAAQ,CAAC0F,gBAAT,CAA0B,QAA1B,CAAd,CAAd;AACA,UAAIY,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,UAASC,MAAT,EAAiB;AAAE,eAAOA,MAAM,CAACC,IAAd;AAAoB,OAAnD,EAAqDd,MAArD,CAA4D,UAASc,IAAT,EAAe;AAAE,eAAOA,IAAI,CAACzE,MAAL,GAAc,CAArB;AAAwB,OAArG,CAAlB;AACA,UAAI0E,UAAU,GAAGL,OAAO,CAACV,MAAR,CAAe,UAASa,MAAT,EAAiB;AAAE,eAAOA,MAAM,CAACG,GAAd;AAAmB,OAArD,CAAjB;AAEA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,GAAG,GAAGH,UAAU,CAAC1E,MAArB;;AACA,UAAI8E,MAAM,GAAG,SAATA,MAAS,GAAW;AACtBF,cAAM,GAAGA,MAAM,GAAG,CAAlB;;AACA,YAAIA,MAAM,KAAKC,GAAf,EAAoB;AAClBP,qBAAW,CAACN,OAAZ,CAAoB,UAASQ,MAAT,EAAiB;AAAEO,gBAAI,CAACP,MAAD,CAAJ;AAAe,WAAtD;AACD;AACF,OALD;;AAOAE,gBAAU,CACPV,OADH,CACW,UAASQ,MAAT,EAAiB;AACxB,YAAIG,GAAG,GAAGH,MAAM,CAACG,GAAjB;AACAH,cAAM,CAAC3E,MAAP;AACA,YAAImF,SAAS,GAAGhH,QAAQ,CAAC8C,aAAT,CAAuB,QAAvB,CAAhB;AACAkE,iBAAS,CAACL,GAAV,GAAgBpC,WAAW,CAACoC,GAAD,CAA3B;AACAK,iBAAS,CAACC,KAAV,GAAkB,IAAlB;AACAD,iBAAS,CAACE,MAAV,GAAmBJ,MAAnB;AACA9G,gBAAQ,CAACmH,IAAT,CAAcC,WAAd,CAA0BJ,SAA1B;AACD,OATH;AAUD;AA5Ca,GAAhB;AA8CA,MAAIK,IAAI,GAAGjD,EAAE,CAACiD,IAAH,IAAW,IAAtB;AACA,MAAIC,IAAI,GAAGpD,EAAE,CAACqD,MAAH,IAAavD,MAAM,CAACvC,QAAP,CAAgB+F,QAA7B,IAAyC,WAApD;;AAEA,MAAIC,OAAO,GAAG,SAAVA,OAAU,GAAU;AACtB,QAAIC,UAAU,GAAG,IAAI3D,SAAJ,CAAc,UAAUuD,IAAV,GAAiB,GAAjB,GAAuBD,IAArC,CAAjB;;AACAK,cAAU,CAACC,SAAX,GAAuB,UAAShG,KAAT,EAAe;AACpC,UAAIyC,EAAE,CAACC,QAAP,EAAiB;AACjB,UAAIuD,OAAO,GAAGjG,KAAK,CAACkG,IAApB;AACA,UAAIC,QAAQ,GAAG1C,SAAS,CAACwC,OAAD,CAAT,IAAsBxC,SAAS,CAACC,IAA/C;AACAyC,cAAQ;AACT,KALD;;AAMAJ,cAAU,CAACK,OAAX,GAAqB,YAAU;AAC7B,UAAIL,UAAU,CAACM,UAAf,EAA2BN,UAAU,CAACO,KAAX;AAC5B,KAFD;;AAGAP,cAAU,CAACQ,OAAX,GAAqB,YAAU;AAC7BlE,YAAM,CAACiC,UAAP,CAAkBwB,OAAlB,EAA2B,IAA3B;AACD,KAFD;AAGD,GAdD;;AAeAA,SAAO;AACR,CAlFD;AAmFA","file":"docs/app.js","sourcesContent":["\nrequire.register(\"php-wasm/PhpBase.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"php-wasm\");\n  (function() {\n    \"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhpBase = void 0;\n\nvar _UniqueIndex = require(\"./UniqueIndex\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar STR = 'string';\nvar NUM = 'number';\n\nvar PhpBase = /*#__PURE__*/function (_EventTarget) {\n  _inherits(PhpBase, _EventTarget);\n\n  var _super = _createSuper(PhpBase);\n\n  function PhpBase(PhpBinary) {\n    var _this;\n\n    _classCallCheck(this, PhpBase);\n\n    _this = _super.call(this);\n    var FLAGS = {};\n    _this.returnValue = -1;\n\n    _this.onerror = function () {};\n\n    _this.onoutput = function () {};\n\n    _this.onready = function () {};\n\n    var callbacks = new _UniqueIndex.UniqueIndex();\n    var targets = new _UniqueIndex.UniqueIndex();\n    _this.binary = new PhpBinary({\n      callbacks: callbacks,\n      targets: targets,\n      postRun: function postRun() {\n        var event = new CustomEvent('ready');\n\n        _this.dispatchEvent(event);\n\n        _this.onready(event);\n      },\n      print: function print() {\n        for (var _len = arguments.length, chunks = new Array(_len), _key = 0; _key < _len; _key++) {\n          chunks[_key] = arguments[_key];\n        }\n\n        console.log(chunks);\n        var event = new CustomEvent('output', {\n          detail: chunks.map(function (c) {\n            return c + \"\\n\";\n          })\n        });\n\n        _this.dispatchEvent(event);\n\n        _this.onoutput(event);\n      },\n      printErr: function printErr() {\n        for (var _len2 = arguments.length, chunks = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          chunks[_key2] = arguments[_key2];\n        }\n\n        console.log(chunks);\n        var event = new CustomEvent('error', {\n          detail: chunks.map(function (c) {\n            return c + \"\\n\";\n          })\n        });\n\n        _this.onerror(event);\n\n        _this.dispatchEvent(event);\n      }\n    }).then(function (php) {\n      var retVal = php.ccall('pib_init', NUM, [STR], []);\n      return php;\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    return _this;\n  }\n\n  _createClass(PhpBase, [{\n    key: \"run\",\n    value: function run(phpCode) {\n      console.log('Run script', phpCode);\n      return this.binary.then(function (php) {\n        return php.ccall('pib_run', NUM, [STR], [\"?>\".concat(phpCode)]);\n      });\n    }\n  }, {\n    key: \"exec\",\n    value: function exec(phpCode) {\n      console.log('Exec expression', phpCode);\n      return this.binary.then(function (php) {\n        return php.ccall('pib_exec', STR, [STR], [phpCode]);\n      });\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var call = this.binary.then(function (php) {\n        return php.ccall('pib_refresh', NUM, [], []);\n      });\n      call[\"catch\"](function (error) {\n        return console.log(error);\n      });\n      return call;\n    }\n  }]);\n\n  return PhpBase;\n}( /*#__PURE__*/_wrapNativeSuper(EventTarget));\n\nexports.PhpBase = PhpBase;\n  })();\n});","\nrequire.register(\"php-wasm/PhpWeb.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"php-wasm\");\n  (function() {\n    \"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhpWeb = void 0;\n\nvar _PhpBase2 = require(\"./PhpBase\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PhpBinary = require('./php-web');\n\nvar PhpWeb = /*#__PURE__*/function (_PhpBase) {\n  _inherits(PhpWeb, _PhpBase);\n\n  var _super = _createSuper(PhpWeb);\n\n  function PhpWeb() {\n    _classCallCheck(this, PhpWeb);\n\n    return _super.call(this, PhpBinary);\n  }\n\n  return PhpWeb;\n}(_PhpBase2.PhpBase);\n\nexports.PhpWeb = PhpWeb;\n\nif (window && document) {\n  var php = new PhpWeb();\n\n  var runScriptTag = function runScriptTag(element) {\n    var src = element.getAttribute('src');\n\n    if (src) {\n      fetch(src).then(function (r) {\n        return r.text();\n      }).then(function (r) {\n        php.run(r).then(function (exit) {\n          return console.log(exit);\n        });\n      });\n      return;\n    }\n\n    var inlineCode = element.innerText.trim();\n    console.log(inlineCode);\n\n    if (inlineCode) {\n      php.run(inlineCode);\n    }\n  };\n\n  php.addEventListener('ready', function () {\n    var phpSelector = 'script[type=\"text/php\"]';\n    var htmlNode = document.body.parentElement;\n    var observer = new MutationObserver(function (mutations, observer) {\n      var _iterator = _createForOfIteratorHelper(mutations),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var mutation = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(mutation.addedNodes),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var addedNode = _step2.value;\n\n              if (!addedNode.matches || !addedNode.matches(phpSelector)) {\n                continue;\n              }\n\n              runScriptTag(addedNode);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    observer.observe(htmlNode, {\n      childList: true,\n      subtree: true\n    });\n    var phpNodes = document.querySelectorAll(phpSelector);\n\n    var _iterator3 = _createForOfIteratorHelper(phpNodes),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var phpNode = _step3.value;\n        var code = phpNode.innerText.trim();\n        runScriptTag(phpNode);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  });\n}\n  })();\n});","\nrequire.register(\"php-wasm/UniqueIndex.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"php-wasm\");\n  (function() {\n    \"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueIndex = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UniqueIndex = function UniqueIndex() {\n  _classCallCheck(this, UniqueIndex);\n\n  var map = new Map();\n  var set = new WeakMap();\n  var index = 0;\n  Object.defineProperty(this, 'add', {\n    configurable: false,\n    writable: false,\n    value: function value(callback) {\n      var existing = set.has(callback);\n\n      if (existing) {\n        return existing;\n      }\n\n      var newIndex = ++index;\n      set.set(callback, newIndex);\n      map.set(newIndex, callback);\n      return newIndex;\n    }\n  });\n  Object.defineProperty(this, 'has', {\n    configurable: false,\n    writable: false,\n    value: function value(callback) {\n      if (set.has(callback)) {\n        return set.get(callback);\n      }\n    }\n  });\n  Object.defineProperty(this, 'get', {\n    configurable: false,\n    writable: false,\n    value: function value(index) {\n      if (map.has(index)) {\n        return map.get(index);\n      }\n    }\n  });\n  Object.defineProperty(this, 'remove', {\n    configurable: false,\n    writable: false,\n    value: function value(index) {\n      var callback = map.get(index);\n\n      if (callback) {\n        set[\"delete\"](callback);\n        map[\"delete\"](index);\n      }\n    }\n  });\n};\n\nexports.UniqueIndex = UniqueIndex;\n  })();\n});","\nrequire.register(\"php-wasm/php-web.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"php-wasm\");\n  (function() {\n    var PHP = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(PHP) {\n  PHP = PHP || {};\n\n\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof PHP !== 'undefined' ? PHP : {};\n\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise(function(resolve, reject) {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n  if (!Module.expectedDataFileDownloads) {\n    Module.expectedDataFileDownloads = 0;\n  }\n  Module.expectedDataFileDownloads++;\n  (function() {\n   var loadPackage = function(metadata) {\n  \n      var PACKAGE_PATH;\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\n      } else if (typeof location !== 'undefined') {\n        // worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\n      } else {\n        throw 'using preloaded data can only be done on a web page or in a web worker';\n      }\n      var PACKAGE_NAME = '../../build/php-web.data';\n      var REMOTE_PACKAGE_BASE = 'php-web.data';\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\n        Module['locateFile'] = Module['locateFilePackage'];\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\n      }\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\n    \n      var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n      var PACKAGE_UUID = metadata['package_uuid'];\n    \n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', packageName, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = function(event) {\n          var url = packageName;\n          var size = packageSize;\n          if (event.total) size = event.total;\n          if (event.loaded) {\n            if (!xhr.addedTotal) {\n              xhr.addedTotal = true;\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n              Module.dataFileDownloads[url] = {\n                loaded: event.loaded,\n                total: size\n              };\n            } else {\n              Module.dataFileDownloads[url].loaded = event.loaded;\n            }\n            var total = 0;\n            var loaded = 0;\n            var num = 0;\n            for (var download in Module.dataFileDownloads) {\n            var data = Module.dataFileDownloads[download];\n              total += data.total;\n              loaded += data.loaded;\n              num++;\n            }\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\n          } else if (!Module.dataFileDownloads) {\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\n          }\n        };\n        xhr.onerror = function(event) {\n          throw new Error(\"NetworkError for: \" + packageName);\n        }\n        xhr.onload = function(event) {\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n            var packageData = xhr.response;\n            callback(packageData);\n          } else {\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n          }\n        };\n        xhr.send(null);\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n    \n        var fetchedCallback = null;\n        var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;\n\n        if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {\n          if (fetchedCallback) {\n            fetchedCallback(data);\n            fetchedCallback = null;\n          } else {\n            fetched = data;\n          }\n        }, handleError);\n      \n    function runWithFS() {\n  \n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\n  Module['FS_createPath']('/', 'Zend', true, true);\n\n      /** @constructor */\n      function DataRequest(start, end, audio) {\n        this.start = start;\n        this.end = end;\n        this.audio = audio;\n      }\n      DataRequest.prototype = {\n        requests: {},\n        open: function(mode, name) {\n          this.name = name;\n          this.requests[name] = this;\n          Module['addRunDependency']('fp ' + this.name);\n        },\n        send: function() {},\n        onload: function() {\n          var byteArray = this.byteArray.subarray(this.start, this.end);\n          this.finish(byteArray);\n        },\n        finish: function(byteArray) {\n          var that = this;\n  \n          Module['FS_createDataFile'](this.name, null, byteArray, true, true, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change\n          Module['removeRunDependency']('fp ' + that.name);\n  \n          this.requests[this.name] = null;\n        }\n      };\n  \n          var files = metadata['files'];\n          for (var i = 0; i < files.length; ++i) {\n            new DataRequest(files[i]['start'], files[i]['end'], files[i]['audio']).open('GET', files[i]['filename']);\n          }\n  \n    \n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        \n          // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though\n          // (we may be allocating before malloc is ready, during startup).\n          var ptr = Module['getMemory'](byteArray.length);\n          Module['HEAPU8'].set(byteArray, ptr);\n          DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);\n    \n            var files = metadata['files'];\n            for (var i = 0; i < files.length; ++i) {\n              DataRequest.prototype.requests[files[i].filename].onload();\n            }\n                Module['removeRunDependency']('datafile_../../build/php-web.data');\n\n      };\n      Module['addRunDependency']('datafile_../../build/php-web.data');\n    \n      if (!Module.preloadResults) Module.preloadResults = {};\n    \n        Module.preloadResults[PACKAGE_NAME] = {fromCache: false};\n        if (fetched) {\n          processPackageData(fetched);\n          fetched = null;\n        } else {\n          fetchedCallback = processPackageData;\n        }\n      \n    }\n    if (Module['calledRun']) {\n      runWithFS();\n    } else {\n      if (!Module['preRun']) Module['preRun'] = [];\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\n    }\n  \n   }\n   loadPackage({\"files\": [{\"filename\": \"/Zend/bench.php\", \"start\": 0, \"end\": 7634, \"audio\": 0}], \"remote_package_size\": 7634, \"package_uuid\": \"99ccbb5f-82c1-47cd-89dc-e914c3820f10\"});\n  \n  })();\n  \n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = function(status, toThrow) {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n\n\n\n\n  read_ = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n\n\n\n  }\n\n  setWindowTitle = function(title) { document.title = title };\n} else\n{\n}\n\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif (Module['arguments']) arguments_ = Module['arguments'];\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n\n\n\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\nfunction dynamicAlloc(size) {\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = Number(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n    }\n};\n\n\n\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Wraps a JS function as a wasm function with a given signature.\nfunction convertJsFunctionToWasm(func, sig) {\n\n  // If the type reflection proposal is available, use the new\n  // \"WebAssembly.Function\" constructor.\n  // Otherwise, construct a minimal wasm module importing the JS function and\n  // re-exporting it.\n  if (typeof WebAssembly.Function === \"function\") {\n    var typeNames = {\n      'i': 'i32',\n      'j': 'i64',\n      'f': 'f32',\n      'd': 'f64'\n    };\n    var type = {\n      parameters: [],\n      results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n    };\n    for (var i = 1; i < sig.length; ++i) {\n      type.parameters.push(typeNames[sig[i]]);\n    }\n    return new WebAssembly.Function(type, func);\n  }\n\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    'e': {\n      'f': func\n    }\n  });\n  var wrappedFunc = instance.exports['f'];\n  return wrappedFunc;\n}\n\nvar freeTableIndexes = [];\n\n// Weak map of functions in the table to their indexes, created on first use.\nvar functionsInTableMap;\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  var table = wasmTable;\n\n  // Check if the function is already in the table, to ensure each function\n  // gets a unique index. First, create the map if this is the first use.\n  if (!functionsInTableMap) {\n    functionsInTableMap = new WeakMap();\n    for (var i = 0; i < table.length; i++) {\n      var item = table.get(i);\n      // Ignore null values.\n      if (item) {\n        functionsInTableMap.set(item, i);\n      }\n    }\n  }\n  if (functionsInTableMap.has(func)) {\n    return functionsInTableMap.get(func);\n  }\n\n  // It's not in the table, add it now.\n\n\n  var ret;\n  // Reuse a free index if there is one, otherwise grow.\n  if (freeTableIndexes.length) {\n    ret = freeTableIndexes.pop();\n  } else {\n    ret = table.length;\n    // Grow the table\n    try {\n      table.grow(1);\n    } catch (err) {\n      if (!(err instanceof RangeError)) {\n        throw err;\n      }\n      throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\n    }\n  }\n\n  // Set the new value.\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    table.set(ret, func);\n  } catch (err) {\n    if (!(err instanceof TypeError)) {\n      throw err;\n    }\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    table.set(ret, wrapped);\n  }\n\n  functionsInTableMap.set(func, ret);\n\n  return ret;\n}\n\nfunction removeFunctionWasm(index) {\n  functionsInTableMap.delete(wasmTable.get(index));\n  freeTableIndexes.push(index);\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\n\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\n\n\n\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\n/** @param {Array=} args */\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n};\n\nvar getTempRet0 = function() {\n  return tempRet0;\n};\n\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nvar wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nvar noExitRuntime;if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];\n\n\nif (typeof WebAssembly !== 'object') {\n  err('no native wasm support detected');\n}\n\n\n\n\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\n\n/** @param {number} ptr\n    @param {number} value\n    @param {string} type\n    @param {number|boolean=} noSafe */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\n/** @param {number} ptr\n    @param {string} type\n    @param {number|boolean=} noSafe */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// In fastcomp asm.js, we don't need a wasm Table at all.\n// In the wasm backend, we polyfill the WebAssembly object,\n// so this creates a (non-native-wasm) table for us.\nvar wasmTable = new WebAssembly.Table({\n  'initial': 6205,\n  'maximum': 6205,\n  'element': 'anyfunc'\n});\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\n/** @param {string|null=} returnType\n    @param {Array=} argTypes\n    @param {Arguments|Array=} args\n    @param {Object=} opts */\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\n/** @param {string=} returnType\n    @param {Array=} argTypes\n    @param {Object=} opts */\nfunction cwrap(ident, returnType, argTypes, opts) {\n  argTypes = argTypes || [];\n  // When the function takes numbers and returns a number, we can just return\n  // the original function\n  var numericArgs = argTypes.every(function(type){ return type === 'number'});\n  var numericRet = returnType !== 'string';\n  if (numericRet && numericArgs && !opts) {\n    return getCFunc(ident);\n  }\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n// runtime_strings.js: Strings related runtime functions that are part of both MINIMAL_RUNTIME and regular runtime.\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = heap[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = heap[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = heap[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heap[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   heap: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | (u >> 6);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | (u >> 12);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      heap[outIdx++] = 0xF0 | (u >> 18);\n      heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n\n\n\n// runtime_strings_extra.js: Strings related runtime functions that are available only in regular runtime.\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  var maxIdx = idx + maxBytesToRead / 2;\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0 || i == maxBytesToRead / 2) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n  var i = 0;\n\n  var str = '';\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(i >= maxBytesToRead / 4)) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0) break;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n  return str;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated\n    @param {boolean=} dontAddNull */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  HEAP8.set(array, buffer);\n}\n\n/** @param {boolean=} dontAddNull */\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n}\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 2285232,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 7528112,\n    DYNAMIC_BASE = 7528112,\n    DYNAMICTOP_PTR = 2285040;\n\n\n\nvar TOTAL_STACK = 5242880;\n\nvar INITIAL_INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 268435456;\n\n\n\n\n\n\n\n\n\n// In non-standalone/normal mode, we create the memory here.\n\n\n\n// Create the main memory. (Note: this isn't used in STANDALONE_WASM mode since the wasm\n// memory is created in the wasm, not in JS.)\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE\n      ,\n      'maximum': INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE\n    });\n  }\n\n\nif (wasmMemory) {\n  buffer = wasmMemory.buffer;\n}\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['INITIAL_MEMORY'].\nINITIAL_INITIAL_MEMORY = buffer.byteLength;\nupdateGlobalBufferAndViews(buffer);\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback(Module); // Pass the module as the first argument.\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n  if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\nTTY.init();\nSOCKFS.root = FS.mount(SOCKFS, {}, null);\nPIPEFS.root = FS.mount(PIPEFS, {}, null);\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  FS.ignorePermissions = false;\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  runtimeExited = true;\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n/** @param {number|boolean=} ignore */\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\n/** @param {number|boolean=} ignore */\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what += '';\n  out(what);\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  what = 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';\n\n  // Throw a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  throw new WebAssembly.RuntimeError(what);\n}\n\n\nvar memoryInitializer = null;\n\n\n\n\n\n\n\n\n\n\n\n\nfunction hasPrefix(str, prefix) {\n  return String.prototype.startsWith ?\n      str.startsWith(prefix) :\n      str.indexOf(prefix) === 0;\n}\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return hasPrefix(filename, fileURIPrefix);\n}\n\n\n\n\nvar wasmBinaryFile = 'php-web.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n\n    if (readBinary) {\n      return readBinary(wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // If we don't have the binary yet, and have the Fetch api, use that;\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function'\n      ) {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': asmLibraryArg,\n    'wasi_snapshot_preview1': asmLibraryArg\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n  // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n  }\n\n  // Prefer streaming instantiation if available.\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming === 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        typeof fetch === 'function') {\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiatedSource, function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiatedSource);\n    }\n  }\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  instantiateAsync();\n  return {}; // no exports yet; we'll fill them in later\n}\n\nModule['asm'] = createWasm;\n\n// Globals used by JS i64 conversions\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = [function($0, $1) { const target = Module.targets.get($0) || window; const property = UTF8ToString($1); const result = target[property]; console.log('target/prop:', $0, target, property, typeof result, result); if(!result || !['function','object'].includes(typeof result)) { const jsRet = 'OK' + String(result); const len = lengthBytesUTF8(jsRet) + 1; const strLoc = _malloc(len); stringToUTF8(jsRet, strLoc, len); return strLoc; } const jsRet = 'XX'; const len = lengthBytesUTF8(jsRet) + 1; const strLoc = _malloc(len); stringToUTF8(jsRet, strLoc, len); return strLoc; },\n function($0, $1) { const target = Module.targets.get($0) || window; const property = UTF8ToString($1); const result = target[property]; console.log('target/prop:', $0, target, property, typeof result, result); if(['function','object'].includes(typeof result)) { let index = Module.targets.has(result); if(!index) { index = Module.targets.add(result); } console.log(index); return index; } console.log(0); return 0; },\n function($0, $1, $2) { const target = Module.targets.get($0) || window; const eventName = UTF8ToString($1); const funcPtr = $2; const options = {}; const callback = () => { Module.ccall( 'exec_callback' , 'number' , [\"number\"] , [funcPtr] ); }; target.addEventListener(eventName, callback, options); const remover = () => { target.removeEventListener(eventName, callback, options); return $2; }; return Module.callbacks.add(remover); },\n function($0) { const remover = Module.callbacks.get($0); return remover(); },\n function($0, $1) { const target = Module.targets.get($0) || document; const querySelector = UTF8ToString($1); const result = target.querySelector(querySelector); if(!result) { return 0; } let index = Module.targets.has(result) || 0; if(!index) { index = Module.targets.add(result); } return index; },\n function($0) { const jsRet = String(eval(UTF8ToString($0))); const len = lengthBytesUTF8(jsRet) + 1; const strLoc = _malloc(len); stringToUTF8(jsRet, strLoc, len); return strLoc; },\n function($0, $1) { const funcName = UTF8ToString($0); const argJson = UTF8ToString($1); const func = window[funcName]; const args = JSON.parse(argJson || '[]') || []; const jsRet = String(func(...args)); const len = lengthBytesUTF8(jsRet) + 1; const strLoc = _malloc(len); stringToUTF8(jsRet, strLoc, len); return strLoc; },\n function($0, $1) { const timeout = Number(UTF8ToString($0)); const funcPtr = $1; setTimeout(()=>{ Module.ccall( 'exec_callback' , 'number' , [\"number\"] , [funcPtr] ); Module.ccall( 'del_callback' , 'number' , [\"number\"] , [funcPtr] ); }, timeout); }];\n\nfunction _emscripten_asm_const_iii(code, a0, a1) {\n  return ASM_CONSTS[code](a0, a1);\n}\n\nfunction _emscripten_asm_const_ii(code, a0) {\n  return ASM_CONSTS[code](a0);\n}\n\nfunction _emscripten_asm_const_iiii(code, a0, a1, a2) {\n  return ASM_CONSTS[code](a0, a1, a2);\n}\n\n\n\n\n// STATICTOP = STATIC_BASE + 2284208;\n/* global initializers */  __ATINIT__.push({ func: function() { ___emscripten_environ_constructor() } });\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 2285216;\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function demangle(func) {\n      return func;\n    }\n\n  function demangleAll(text) {\n      var regex =\n        /\\b__Z[\\w\\d_]+/g;\n      return text.replace(regex,\n        function(x) {\n          var y = demangle(x);\n          return x === y ? x : (y + ' [' + x + ']');\n        });\n    }\n\n  function jsStackTrace() {\n      var err = new Error();\n      if (!err.stack) {\n        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n        // so try that as a special-case.\n        try {\n          throw new Error();\n        } catch(e) {\n          err = e;\n        }\n        if (!err.stack) {\n          return '(no stack trace available)';\n        }\n      }\n      return err.stack.toString();\n    }\n\n   \n\n   \n\n   \n\n  function stackTrace() {\n      var js = jsStackTrace();\n      if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n      return demangleAll(js);\n    }\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n  \n  var ENV={};\n  \n  function __getExecutableName() {\n      return thisProgram || './this.program';\n    }function ___buildEnvironment(environ) {\n      // WARNING: Arbitrary limit!\n      var MAX_ENV_VALUES = 64;\n      var TOTAL_ENV_SIZE = 1024;\n  \n      // Statically allocate memory for the environment.\n      var poolPtr;\n      var envPtr;\n      if (!___buildEnvironment.called) {\n        ___buildEnvironment.called = true;\n        // Set default values. Use string keys for Closure Compiler compatibility.\n        ENV['USER'] = 'web_user';\n        ENV['LOGNAME'] = 'web_user';\n        ENV['PATH'] = '/';\n        ENV['PWD'] = '/';\n        ENV['HOME'] = '/home/web_user';\n        // Browser language detection #8751\n        ENV['LANG'] = ((typeof navigator === 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        ENV['_'] = __getExecutableName();\n        // Allocate memory.\n        poolPtr = getMemory(TOTAL_ENV_SIZE);\n        envPtr = getMemory(MAX_ENV_VALUES * 4);\n        HEAP32[((envPtr)>>2)]=poolPtr;\n        HEAP32[((environ)>>2)]=envPtr;\n      } else {\n        envPtr = HEAP32[((environ)>>2)];\n        poolPtr = HEAP32[((envPtr)>>2)];\n      }\n  \n      // Collect key=value lines.\n      var strings = [];\n      var totalSize = 0;\n      for (var key in ENV) {\n        if (typeof ENV[key] === 'string') {\n          var line = key + '=' + ENV[key];\n          strings.push(line);\n          totalSize += line.length;\n        }\n      }\n      if (totalSize > TOTAL_ENV_SIZE) {\n        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');\n      }\n  \n      // Make new.\n      var ptrSize = 4;\n      for (var i = 0; i < strings.length; i++) {\n        var line = strings[i];\n        writeAsciiToMemory(line, poolPtr);\n        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;\n        poolPtr += line.length + 1;\n      }\n      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;\n    }\n\n  \n  \n  var _emscripten_get_now;_emscripten_get_now = function() { return performance.now(); }\n  ;\n  \n  var _emscripten_get_now_is_monotonic=true;;\n  \n  function setErrNo(value) {\n      HEAP32[((___errno_location())>>2)]=value;\n      return value;\n    }function _clock_gettime(clk_id, tp) {\n      // int clock_gettime(clockid_t clk_id, struct timespec *tp);\n      var now;\n      if (clk_id === 0) {\n        now = Date.now();\n      } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n        now = _emscripten_get_now();\n      } else {\n        setErrNo(28);\n        return -1;\n      }\n      HEAP32[((tp)>>2)]=(now/1000)|0; // seconds\n      HEAP32[(((tp)+(4))>>2)]=((now % 1000)*1000*1000)|0; // nanoseconds\n      return 0;\n    }function ___clock_gettime(a0,a1\n  ) {\n  return _clock_gettime(a0,a1);\n  }\n\n  function ___map_file(pathname, size) {\n      setErrNo(63);\n      return -1;\n    }\n\n  \n  \n  \n  var PATH={splitPath:function(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function(parts, allowAboveRoot) {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function(path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function(path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function(path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function(path) {\n        return PATH.splitPath(path)[3];\n      },join:function() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function(l, r) {\n        return PATH.normalize(l + '/' + r);\n      }};\n  \n  \n  var PATH_FS={resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path !== 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === '/';\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {\n          return !!p;\n        }), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },relative:function(from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      }};\n  \n  var TTY={ttys:[],init:function () {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process['stdin']['setEncoding']('utf8');\n        // }\n      },shutdown:function() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process['stdin']['pause']();\n        // }\n      },register:function(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },stream_ops:{open:function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },close:function(stream) {\n          // flush any pending line data\n          stream.tty.ops.flush(stream.tty);\n        },flush:function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },write:function(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }},default_tty_ops:{get_char:function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (typeof window != 'undefined' &&\n              typeof window.prompt == 'function') {\n              // Browser.\n              result = window.prompt('Input: ');  // returns null on cancel\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              // Command line.\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },flush:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }},default_tty1_ops:{put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },flush:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }}};\n  \n  var MEMFS={ops_table:null,mount:function(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createNode:function(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },getFileDataAsRegularArray:function(node) {\n        if (node.contents && node.contents.subarray) {\n          var arr = [];\n          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);\n          return arr; // Returns a copy of the original data.\n        }\n        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.\n      },getFileDataAsTypedArray:function(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },expandFileStorage:function(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n        return;\n      },resizeFileStorage:function(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n          return;\n        }\n        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n          return;\n        }\n        // Backing with a JS array.\n        if (!node.contents) node.contents = [];\n        if (node.contents.length > newSize) node.contents.length = newSize;\n        else while (node.contents.length < newSize) node.contents.push(0);\n        node.usedBytes = newSize;\n      },node_ops:{getattr:function(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },setattr:function(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },lookup:function(parent, name) {\n          throw FS.genericErrors[44];\n        },mknod:function(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },rename:function(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        },unlink:function(parent, name) {\n          delete parent.contents[name];\n        },rmdir:function(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n        },readdir:function(node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },symlink:function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },readlink:function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },write:function(stream, buffer, offset, length, position, canOwn) {\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.\n          else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },llseek:function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },allocate:function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },mmap:function(stream, address, length, position, prot, flags) {\n          // We don't currently support location hints for the address of the mapping\n          assert(address === 0);\n  \n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the buffer\n            // we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = _malloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            // MAP_PRIVATE calls need not to be synced back to underlying fs\n            return 0;\n          }\n  \n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        }}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e) {\n        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();\n        return setErrNo(e.errno);\n      },lookupPath:function(path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n  \n        // split the path\n        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), false);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },getPath:function(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },hashName:function(parentid, name) {\n        var hash = 0;\n  \n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },hashAddNode:function(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },hashRemoveNode:function(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },lookupNode:function(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },createNode:function(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },destroyNode:function(node) {\n        FS.hashRemoveNode(node);\n      },isRoot:function(node) {\n        return node === node.parent;\n      },isMountpoint:function(node) {\n        return !!node.mounted;\n      },isFile:function(mode) {\n        return (mode & 61440) === 32768;\n      },isDir:function(mode) {\n        return (mode & 61440) === 16384;\n      },isLink:function(mode) {\n        return (mode & 61440) === 40960;\n      },isChrdev:function(mode) {\n        return (mode & 61440) === 8192;\n      },isBlkdev:function(mode) {\n        return (mode & 61440) === 24576;\n      },isFIFO:function(mode) {\n        return (mode & 61440) === 4096;\n      },isSocket:function(mode) {\n        return (mode & 49152) === 49152;\n      },flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },flagsToPermissionString:function(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },nodePermissions:function(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },mayLookup:function(dir) {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },mayCreate:function(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },mayDelete:function(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },mayOpen:function(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },MAX_OPEN_FDS:4096,nextfd:function(fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },getStream:function(fd) {\n        return FS.streams[fd];\n      },createStream:function(stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = /** @constructor */ function(){};\n          FS.FSStream.prototype = {\n            object: {\n              get: function() { return this.node; },\n              set: function(val) { this.node = val; }\n            },\n            isRead: {\n              get: function() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              get: function() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              get: function() { return (this.flags & 1024); }\n            }\n          };\n        }\n        // clone it, so we can return an instance of FSStream\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },closeStream:function(fd) {\n        FS.streams[fd] = null;\n      },chrdev_stream_ops:{open:function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },llseek:function() {\n          throw new FS.ErrnoError(70);\n        }},major:function(dev) {\n        return ((dev) >> 8);\n      },minor:function(dev) {\n        return ((dev) & 0xff);\n      },makedev:function(ma, mi) {\n        return ((ma) << 8 | (mi));\n      },registerDevice:function(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },getDevice:function(dev) {\n        return FS.devices[dev];\n      },getMounts:function(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },syncfs:function(populate, callback) {\n        if (typeof(populate) === 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },mount:function(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },unmount:function (mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.indexOf(current.mount) !== -1) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },lookup:function(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },mknod:function(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },create:function(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },mkdir:function(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },mkdirTree:function(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },mkdev:function(path, mode, dev) {\n        if (typeof(dev) === 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },symlink:function(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },rename:function(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n        try {\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n        } catch (e) {\n          throw new FS.ErrnoError(10);\n        }\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['willMovePath']) {\n            FS.trackingDelegate['willMovePath'](old_path, new_path);\n          }\n        } catch(e) {\n          err(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n        try {\n          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);\n        } catch(e) {\n          err(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n      },rmdir:function(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          err(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          err(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readdir:function(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },unlink:function(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          err(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          err(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readlink:function(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },stat:function(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },lstat:function(path) {\n        return FS.stat(path, true);\n      },chmod:function(path, mode, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },lchmod:function(path, mode) {\n        FS.chmod(path, mode, true);\n      },fchmod:function(fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },chown:function(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },lchown:function(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },fchown:function(fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },truncate:function(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },ftruncate:function(fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },utime:function(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },open:function(path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path === 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512)) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n            err(\"FS.trackingDelegate error on read file: \" + path);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['onOpenFile']) {\n            var trackingFlags = 0;\n            if ((flags & 2097155) !== 1) {\n              trackingFlags |= FS.tracking.openFlags.READ;\n            }\n            if ((flags & 2097155) !== 0) {\n              trackingFlags |= FS.tracking.openFlags.WRITE;\n            }\n            FS.trackingDelegate['onOpenFile'](path, trackingFlags);\n          }\n        } catch(e) {\n          err(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \" + e.message);\n        }\n        return stream;\n      },close:function(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },isClosed:function(stream) {\n        return stream.fd === null;\n      },llseek:function(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },read:function(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position !== 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },write:function(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position !== 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        try {\n          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);\n        } catch(e) {\n          err(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \" + e.message);\n        }\n        return bytesWritten;\n      },allocate:function(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },mmap:function(stream, address, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n      },msync:function(stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },munmap:function(stream) {\n        return 0;\n      },ioctl:function(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },readFile:function(path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'r';\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },writeFile:function(path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'w';\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data === 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },cwd:function() {\n        return FS.currentPath;\n      },chdir:function(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },createDefaultDirectories:function() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },createDefaultDevices:function() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function() { return 0; },\n          write: function(stream, buffer, offset, length, pos) { return length; }\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using Module['printErr']\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        var random_device;\n        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {\n          // for modern web browsers\n          var randomBuffer = new Uint8Array(1);\n          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };\n        } else\n        {}\n        if (!random_device) {\n          // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n          random_device = function() { abort(\"random_device\"); };\n        }\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },createSpecialDirectories:function() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount: function() {\n            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup: function(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: function() { return stream.path } }\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },createStandardStreams:function() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 'r');\n        var stdout = FS.open('/dev/stdout', 'w');\n        var stderr = FS.open('/dev/stderr', 'w');\n      },ensureErrnoError:function() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = /** @this{Object} */ function(errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n  \n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach(function(code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },staticInit:function() {\n        FS.ensureErrnoError();\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n        };\n      },init:function(input, output, error) {\n        FS.init.initialized = true;\n  \n        FS.ensureErrnoError();\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },quit:function() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        var fflush = Module['_fflush'];\n        if (fflush) fflush(0);\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },getMode:function(canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },joinPath:function(parts, forceRelative) {\n        var path = PATH.join.apply(null, parts);\n        if (forceRelative && path[0] == '/') path = path.substr(1);\n        return path;\n      },absolutePath:function(relative, base) {\n        return PATH_FS.resolve(base, relative);\n      },standardizePath:function(path) {\n        return PATH.normalize(path);\n      },findObject:function(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          setErrNo(ret.error);\n          return null;\n        }\n      },analyzePath:function(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },createFolder:function(parent, name, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.mkdir(path, mode);\n      },createPath:function(parent, path, canRead, canWrite) {\n        parent = typeof parent === 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },createFile:function(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },createDataFile:function(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data === 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 'w');\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },createDevice:function(parent, name, input, output) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open: function(stream) {\n            stream.seekable = false;\n          },\n          close: function(stream) {\n            // flush any pending line data\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: function(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },createLink:function(parent, name, target, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        return FS.symlink(target, path);\n      },forceLoadFile:function(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        var success = true;\n        if (typeof XMLHttpRequest !== 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            success = false;\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n        if (!success) setErrNo(29);\n        return success;\n      },createLazyFile:function(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        /** @constructor */\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (function(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n            } else {\n              return intArrayFromString(xhr.responseText || '', true);\n            }\n          });\n          var lazyArray = this;\n          lazyArray.setDataGetter(function(chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest !== 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: /** @this{Object} */ function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: /** @this{Object} */ function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function(key) {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            if (!FS.forceLoadFile(node)) {\n              throw new FS.ErrnoError(29);\n            }\n            return fn.apply(null, arguments);\n          };\n        });\n        // use a custom read function\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          if (!FS.forceLoadFile(node)) {\n            throw new FS.ErrnoError(29);\n          }\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },createPreloadedFile:function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init(); // XXX perhaps this method should move onto Browser?\n        // TODO we should allow people to just pass in a complete filename instead\n        // of parent and name being that we just join them anyways\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          var handled = false;\n          Module['preloadPlugins'].forEach(function(plugin) {\n            if (handled) return;\n            if (plugin['canHandle'](fullname)) {\n              plugin['handle'](byteArray, fullname, finish, function() {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          Browser.asyncLoad(url, function(byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },indexedDB:function() {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },DB_NAME:function() {\n        return 'EM_FS_' + window.location.pathname;\n      },DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };\n            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },loadFilesFromDB:function(paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror; // no database to load from\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch(e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      }};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(dirfd, path) {\n        if (path[0] !== '/') {\n          // relative path\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream) throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n          path = PATH.join2(dir, path);\n        }\n        return path;\n      },doStat:function(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)]=stat.dev;\n        HEAP32[(((buf)+(4))>>2)]=0;\n        HEAP32[(((buf)+(8))>>2)]=stat.ino;\n        HEAP32[(((buf)+(12))>>2)]=stat.mode;\n        HEAP32[(((buf)+(16))>>2)]=stat.nlink;\n        HEAP32[(((buf)+(20))>>2)]=stat.uid;\n        HEAP32[(((buf)+(24))>>2)]=stat.gid;\n        HEAP32[(((buf)+(28))>>2)]=stat.rdev;\n        HEAP32[(((buf)+(32))>>2)]=0;\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)]=tempI64[0],HEAP32[(((buf)+(44))>>2)]=tempI64[1]);\n        HEAP32[(((buf)+(48))>>2)]=4096;\n        HEAP32[(((buf)+(52))>>2)]=stat.blocks;\n        HEAP32[(((buf)+(56))>>2)]=(stat.atime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(60))>>2)]=0;\n        HEAP32[(((buf)+(64))>>2)]=(stat.mtime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(68))>>2)]=0;\n        HEAP32[(((buf)+(72))>>2)]=(stat.ctime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(76))>>2)]=0;\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(80))>>2)]=tempI64[0],HEAP32[(((buf)+(84))>>2)]=tempI64[1]);\n        return 0;\n      },doMsync:function(addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },doMkdir:function(path, mode) {\n        // remove a trailing slash, if one - /a/b/ has basename of '', but\n        // we want to create b in the context of this function\n        path = PATH.normalize(path);\n        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },doMknod:function(path, mode, dev) {\n        // we don't want this in the JS API as it uses mknod to create all nodes.\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n          default: return -28;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n      },doReadlink:function(path, buf, bufsize) {\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n  \n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf+len];\n        stringToUTF8(ret, buf, bufsize+1);\n        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n        HEAP8[buf+len] = endChar;\n  \n        return len;\n      },doAccess:function(path, amode) {\n        if (amode & ~7) {\n          // need a valid mode\n          return -28;\n        }\n        var node;\n        var lookup = FS.lookupPath(path, { follow: true });\n        node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      },doDup:function(path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },doReadv:function(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.read(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break; // nothing more to read\n        }\n        return ret;\n      },doWritev:function(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.write(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n        return ret;\n      },varargs:undefined,get:function() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },getStreamFromFD:function(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },get64:function(low, high) {\n        return low;\n      }};function ___sys_unlink(path) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.unlink(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall10(a0\n  ) {\n  return ___sys_unlink(a0);\n  }\n\n  \n  \n  \n  var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var SOCKFS={mount:function(mount) {\n        // If Module['websocket'] has already been defined (e.g. for configuring\n        // the subprotocol/url) use that, if not initialise it to a new object.\n        Module['websocket'] = (Module['websocket'] && \n                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};\n  \n        // Add the Event registration mechanism to the exported websocket configuration\n        // object so we can register network callbacks from native JavaScript too.\n        // For more documentation see system/include/emscripten/emscripten.h\n        Module['websocket']._callbacks = {};\n        Module['websocket']['on'] = /** @this{Object} */ function(event, callback) {\n  \t    if ('function' === typeof callback) {\n  \t\t  this._callbacks[event] = callback;\n          }\n  \t    return this;\n        };\n  \n        Module['websocket'].emit = /** @this{Object} */ function(event, param) {\n  \t    if ('function' === typeof this._callbacks[event]) {\n  \t\t  this._callbacks[event].call(this, param);\n          }\n        };\n  \n        // If debug is enabled register simple default logging callbacks for each Event.\n  \n        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createSocket:function(family, type, protocol) {\n        var streaming = type == 1;\n        if (protocol) {\n          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp\n        }\n  \n        // create our internal socket structure\n        var sock = {\n          family: family,\n          type: type,\n          protocol: protocol,\n          server: null,\n          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test\n          peers: {},\n          pending: [],\n          recv_queue: [],\n          sock_ops: SOCKFS.websocket_sock_ops\n        };\n  \n        // create the filesystem node to store the socket structure\n        var name = SOCKFS.nextname();\n        var node = FS.createNode(SOCKFS.root, name, 49152, 0);\n        node.sock = sock;\n  \n        // and the wrapping stream that enables library functions such\n        // as read and write to indirectly interact with the socket\n        var stream = FS.createStream({\n          path: name,\n          node: node,\n          flags: FS.modeStringToFlags('r+'),\n          seekable: false,\n          stream_ops: SOCKFS.stream_ops\n        });\n  \n        // map the new stream to the socket structure (sockets have a 1:1\n        // relationship with a stream)\n        sock.stream = stream;\n  \n        return sock;\n      },getSocket:function(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream || !FS.isSocket(stream.node.mode)) {\n          return null;\n        }\n        return stream.node.sock;\n      },stream_ops:{poll:function(stream) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.poll(sock);\n        },ioctl:function(stream, request, varargs) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.ioctl(sock, request, varargs);\n        },read:function(stream, buffer, offset, length, position /* ignored */) {\n          var sock = stream.node.sock;\n          var msg = sock.sock_ops.recvmsg(sock, length);\n          if (!msg) {\n            // socket is closed\n            return 0;\n          }\n          buffer.set(msg.buffer, offset);\n          return msg.buffer.length;\n        },write:function(stream, buffer, offset, length, position /* ignored */) {\n          var sock = stream.node.sock;\n          return sock.sock_ops.sendmsg(sock, buffer, offset, length);\n        },close:function(stream) {\n          var sock = stream.node.sock;\n          sock.sock_ops.close(sock);\n        }},nextname:function() {\n        if (!SOCKFS.nextname.current) {\n          SOCKFS.nextname.current = 0;\n        }\n        return 'socket[' + (SOCKFS.nextname.current++) + ']';\n      },websocket_sock_ops:{createPeer:function(sock, addr, port) {\n          var ws;\n  \n          if (typeof addr === 'object') {\n            ws = addr;\n            addr = null;\n            port = null;\n          }\n  \n          if (ws) {\n            // for sockets that've already connected (e.g. we're the server)\n            // we can inspect the _socket property for the address\n            if (ws._socket) {\n              addr = ws._socket.remoteAddress;\n              port = ws._socket.remotePort;\n            }\n            // if we're just now initializing a connection to the remote,\n            // inspect the url property\n            else {\n              var result = /ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);\n              if (!result) {\n                throw new Error('WebSocket URL must be in the format ws(s)://address:port');\n              }\n              addr = result[1];\n              port = parseInt(result[2], 10);\n            }\n          } else {\n            // create the actual websocket object and connect\n            try {\n              // runtimeConfig gets set to true if WebSocket runtime configuration is available.\n              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));\n  \n              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'\n              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.\n              var url = 'ws:#'.replace('#', '//');\n  \n              if (runtimeConfig) {\n                if ('string' === typeof Module['websocket']['url']) {\n                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.\n                }\n              }\n  \n              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.\n                var parts = addr.split('/');\n                url = url + parts[0] + \":\" + port + \"/\" + parts.slice(1).join('/');\n              }\n  \n              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.\n              var subProtocols = 'binary'; // The default value is 'binary'\n  \n              if (runtimeConfig) {\n                if ('string' === typeof Module['websocket']['subprotocol']) {\n                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.\n                }\n              }\n  \n              // The default WebSocket options\n              var opts = undefined;\n  \n              if (subProtocols !== 'null') {\n                // The regex trims the string (removes spaces at the beginning and end, then splits the string by\n                // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.\n                subProtocols = subProtocols.replace(/^ +| +$/g,\"\").split(/ *, */);\n  \n                // The node ws library API for specifying optional subprotocol is slightly different than the browser's.\n                opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;\n              }\n  \n              // some webservers (azure) does not support subprotocol header\n              if (runtimeConfig && null === Module['websocket']['subprotocol']) {\n                subProtocols = 'null';\n                opts = undefined;\n              }\n  \n              // If node we use the ws library.\n              var WebSocketConstructor;\n              {\n                WebSocketConstructor = WebSocket;\n              }\n              ws = new WebSocketConstructor(url, opts);\n              ws.binaryType = 'arraybuffer';\n            } catch (e) {\n              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);\n            }\n          }\n  \n  \n          var peer = {\n            addr: addr,\n            port: port,\n            socket: ws,\n            dgram_send_queue: []\n          };\n  \n          SOCKFS.websocket_sock_ops.addPeer(sock, peer);\n          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);\n  \n          // if this is a bound dgram socket, send the port number first to allow\n          // us to override the ephemeral port reported to us by remotePort on the\n          // remote end.\n          if (sock.type === 2 && typeof sock.sport !== 'undefined') {\n            peer.dgram_send_queue.push(new Uint8Array([\n                255, 255, 255, 255,\n                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),\n                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)\n            ]));\n          }\n  \n          return peer;\n        },getPeer:function(sock, addr, port) {\n          return sock.peers[addr + ':' + port];\n        },addPeer:function(sock, peer) {\n          sock.peers[peer.addr + ':' + peer.port] = peer;\n        },removePeer:function(sock, peer) {\n          delete sock.peers[peer.addr + ':' + peer.port];\n        },handlePeerEvents:function(sock, peer) {\n          var first = true;\n  \n          var handleOpen = function () {\n  \n            Module['websocket'].emit('open', sock.stream.fd);\n  \n            try {\n              var queued = peer.dgram_send_queue.shift();\n              while (queued) {\n                peer.socket.send(queued);\n                queued = peer.dgram_send_queue.shift();\n              }\n            } catch (e) {\n              // not much we can do here in the way of proper error handling as we've already\n              // lied and said this data was sent. shut it down.\n              peer.socket.close();\n            }\n          };\n  \n          function handleMessage(data) {\n            if (typeof data === 'string') {\n              var encoder = new TextEncoder(); // should be utf-8\n              data = encoder.encode(data); // make a typed array from the string\n            } else {\n              assert(data.byteLength !== undefined); // must receive an ArrayBuffer\n              if (data.byteLength == 0) {\n                // An empty ArrayBuffer will emit a pseudo disconnect event\n                // as recv/recvmsg will return zero which indicates that a socket\n                // has performed a shutdown although the connection has not been disconnected yet.\n                return;\n              } else {\n                data = new Uint8Array(data); // make a typed array view on the array buffer\n              }\n            }\n  \n  \n            // if this is the port message, override the peer's port with it\n            var wasfirst = first;\n            first = false;\n            if (wasfirst &&\n                data.length === 10 &&\n                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&\n                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {\n              // update the peer's port and it's key in the peer map\n              var newport = ((data[8] << 8) | data[9]);\n              SOCKFS.websocket_sock_ops.removePeer(sock, peer);\n              peer.port = newport;\n              SOCKFS.websocket_sock_ops.addPeer(sock, peer);\n              return;\n            }\n  \n            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });\n            Module['websocket'].emit('message', sock.stream.fd);\n          };\n  \n          if (ENVIRONMENT_IS_NODE) {\n            peer.socket.on('open', handleOpen);\n            peer.socket.on('message', function(data, flags) {\n              if (!flags.binary) {\n                return;\n              }\n              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer\n            });\n            peer.socket.on('close', function() {\n              Module['websocket'].emit('close', sock.stream.fd);\n            });\n            peer.socket.on('error', function(error) {\n              // Although the ws library may pass errors that may be more descriptive than\n              // ECONNREFUSED they are not necessarily the expected error code e.g. \n              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED\n              // is still probably the most useful thing to do.\n              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.\n              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);\n              // don't throw\n            });\n          } else {\n            peer.socket.onopen = handleOpen;\n            peer.socket.onclose = function() {\n              Module['websocket'].emit('close', sock.stream.fd);\n            };\n            peer.socket.onmessage = function peer_socket_onmessage(event) {\n              handleMessage(event.data);\n            };\n            peer.socket.onerror = function(error) {\n              // The WebSocket spec only allows a 'simple event' to be thrown on error,\n              // so we only really know as much as ECONNREFUSED.\n              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.\n              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);\n            };\n          }\n        },poll:function(sock) {\n          if (sock.type === 1 && sock.server) {\n            // listen sockets should only say they're available for reading\n            // if there are pending clients.\n            return sock.pending.length ? (64 | 1) : 0;\n          }\n  \n          var mask = 0;\n          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets\n            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :\n            null;\n  \n          if (sock.recv_queue.length ||\n              !dest ||  // connection-less sockets are always ready to read\n              (dest && dest.socket.readyState === dest.socket.CLOSING) ||\n              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed\n            mask |= (64 | 1);\n          }\n  \n          if (!dest ||  // connection-less sockets are always ready to write\n              (dest && dest.socket.readyState === dest.socket.OPEN)) {\n            mask |= 4;\n          }\n  \n          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||\n              (dest && dest.socket.readyState === dest.socket.CLOSED)) {\n            mask |= 16;\n          }\n  \n          return mask;\n        },ioctl:function(sock, request, arg) {\n          switch (request) {\n            case 21531:\n              var bytes = 0;\n              if (sock.recv_queue.length) {\n                bytes = sock.recv_queue[0].data.length;\n              }\n              HEAP32[((arg)>>2)]=bytes;\n              return 0;\n            default:\n              return ERRNO_CODES.EINVAL;\n          }\n        },close:function(sock) {\n          // if we've spawned a listen server, close it\n          if (sock.server) {\n            try {\n              sock.server.close();\n            } catch (e) {\n            }\n            sock.server = null;\n          }\n          // close any peer connections\n          var peers = Object.keys(sock.peers);\n          for (var i = 0; i < peers.length; i++) {\n            var peer = sock.peers[peers[i]];\n            try {\n              peer.socket.close();\n            } catch (e) {\n            }\n            SOCKFS.websocket_sock_ops.removePeer(sock, peer);\n          }\n          return 0;\n        },bind:function(sock, addr, port) {\n          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound\n          }\n          sock.saddr = addr;\n          sock.sport = port;\n          // in order to emulate dgram sockets, we need to launch a listen server when\n          // binding on a connection-less socket\n          // note: this is only required on the server side\n          if (sock.type === 2) {\n            // close the existing server if it exists\n            if (sock.server) {\n              sock.server.close();\n              sock.server = null;\n            }\n            // swallow error operation not supported error that occurs when binding in the\n            // browser where this isn't supported\n            try {\n              sock.sock_ops.listen(sock, 0);\n            } catch (e) {\n              if (!(e instanceof FS.ErrnoError)) throw e;\n              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;\n            }\n          }\n        },connect:function(sock, addr, port) {\n          if (sock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);\n          }\n  \n          // TODO autobind\n          // if (!sock.addr && sock.type == 2) {\n          // }\n  \n          // early out if we're already connected / in the middle of connecting\n          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {\n            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);\n            if (dest) {\n              if (dest.socket.readyState === dest.socket.CONNECTING) {\n                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);\n              } else {\n                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);\n              }\n            }\n          }\n  \n          // add the socket to our peer list and set our\n          // destination address / port to match\n          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);\n          sock.daddr = peer.addr;\n          sock.dport = peer.port;\n  \n          // always \"fail\" in non-blocking mode\n          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);\n        },listen:function(sock, backlog) {\n          if (!ENVIRONMENT_IS_NODE) {\n            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);\n          }\n        },accept:function(listensock) {\n          if (!listensock.server) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          var newsock = listensock.pending.shift();\n          newsock.stream.flags = listensock.stream.flags;\n          return newsock;\n        },getname:function(sock, peer) {\n          var addr, port;\n          if (peer) {\n            if (sock.daddr === undefined || sock.dport === undefined) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n            }\n            addr = sock.daddr;\n            port = sock.dport;\n          } else {\n            // TODO saddr and sport will be set for bind()'d UDP sockets, but what\n            // should we be returning for TCP sockets that've been connect()'d?\n            addr = sock.saddr || 0;\n            port = sock.sport || 0;\n          }\n          return { addr: addr, port: port };\n        },sendmsg:function(sock, buffer, offset, length, addr, port) {\n          if (sock.type === 2) {\n            // connection-less sockets will honor the message address,\n            // and otherwise fall back to the bound destination address\n            if (addr === undefined || port === undefined) {\n              addr = sock.daddr;\n              port = sock.dport;\n            }\n            // if there was no address to fall back to, error out\n            if (addr === undefined || port === undefined) {\n              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);\n            }\n          } else {\n            // connection-based sockets will only use the bound\n            addr = sock.daddr;\n            port = sock.dport;\n          }\n  \n          // find the peer for the destination address\n          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);\n  \n          // early out if not connected with a connection-based socket\n          if (sock.type === 1) {\n            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n            } else if (dest.socket.readyState === dest.socket.CONNECTING) {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n          }\n  \n          // create a copy of the incoming data to send, as the WebSocket API\n          // doesn't work entirely with an ArrayBufferView, it'll just send\n          // the entire underlying buffer\n          if (ArrayBuffer.isView(buffer)) {\n            offset += buffer.byteOffset;\n            buffer = buffer.buffer;\n          }\n  \n          var data;\n            data = buffer.slice(offset, offset + length);\n  \n          // if we're emulating a connection-less dgram socket and don't have\n          // a cached connection, queue the buffer to send upon connect and\n          // lie, saying the data was sent now.\n          if (sock.type === 2) {\n            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {\n              // if we're not connected, open a new connection\n              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);\n              }\n              dest.dgram_send_queue.push(data);\n              return length;\n            }\n          }\n  \n          try {\n            // send the actual data\n            dest.socket.send(data);\n            return length;\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n        },recvmsg:function(sock, length) {\n          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html\n          if (sock.type === 1 && sock.server) {\n            // tcp servers should not be recv()'ing on the listen socket\n            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n          }\n  \n          var queued = sock.recv_queue.shift();\n          if (!queued) {\n            if (sock.type === 1) {\n              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);\n  \n              if (!dest) {\n                // if we have a destination address but are not connected, error out\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);\n              }\n              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {\n                // return null if the socket has closed\n                return null;\n              }\n              else {\n                // else, our socket is in a valid state but truly has nothing available\n                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n              }\n            } else {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n          }\n  \n          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's\n          // requeued TCP data it'll be an ArrayBufferView\n          var queuedLength = queued.data.byteLength || queued.data.length;\n          var queuedOffset = queued.data.byteOffset || 0;\n          var queuedBuffer = queued.data.buffer || queued.data;\n          var bytesRead = Math.min(length, queuedLength);\n          var res = {\n            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),\n            addr: queued.addr,\n            port: queued.port\n          };\n  \n  \n          // push back any unread data for TCP connections\n          if (sock.type === 1 && bytesRead < queuedLength) {\n            var bytesRemaining = queuedLength - bytesRead;\n            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);\n            sock.recv_queue.unshift(queued);\n          }\n  \n          return res;\n        }}};\n  \n  \n  function __inet_pton4_raw(str) {\n      var b = str.split('.');\n      for (var i = 0; i < 4; i++) {\n        var tmp = Number(b[i]);\n        if (isNaN(tmp)) return null;\n        b[i] = tmp;\n      }\n      return (b[0] | (b[1] << 8) | (b[2] << 16) | (b[3] << 24)) >>> 0;\n    }\n  \n  \n  /** @suppress {checkTypes} */\n  function jstoi_q(str) {\n      return parseInt(str);\n    }function __inet_pton6_raw(str) {\n      var words;\n      var w, offset, z, i;\n      /* http://home.deds.nl/~aeron/regex/ */\n      var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i\n      var parts = [];\n      if (!valid6regx.test(str)) {\n        return null;\n      }\n      if (str === \"::\") {\n        return [0, 0, 0, 0, 0, 0, 0, 0];\n      }\n      // Z placeholder to keep track of zeros when splitting the string on \":\"\n      if (str.indexOf(\"::\") === 0) {\n        str = str.replace(\"::\", \"Z:\"); // leading zeros case\n      } else {\n        str = str.replace(\"::\", \":Z:\");\n      }\n  \n      if (str.indexOf(\".\") > 0) {\n        // parse IPv4 embedded stress\n        str = str.replace(new RegExp('[.]', 'g'), \":\");\n        words = str.split(\":\");\n        words[words.length-4] = jstoi_q(words[words.length-4]) + jstoi_q(words[words.length-3])*256;\n        words[words.length-3] = jstoi_q(words[words.length-2]) + jstoi_q(words[words.length-1])*256;\n        words = words.slice(0, words.length-2);\n      } else {\n        words = str.split(\":\");\n      }\n  \n      offset = 0; z = 0;\n      for (w=0; w < words.length; w++) {\n        if (typeof words[w] === 'string') {\n          if (words[w] === 'Z') {\n            // compressed zeros - write appropriate number of zero words\n            for (z = 0; z < (8 - words.length+1); z++) {\n              parts[w+z] = 0;\n            }\n            offset = z-1;\n          } else {\n            // parse hex to field to 16-bit value and write it in network byte-order\n            parts[w+offset] = _htons(parseInt(words[w],16));\n          }\n        } else {\n          // parsed IPv4 words\n          parts[w+offset] = words[w];\n        }\n      }\n      return [\n        (parts[1] << 16) | parts[0],\n        (parts[3] << 16) | parts[2],\n        (parts[5] << 16) | parts[4],\n        (parts[7] << 16) | parts[6]\n      ];\n    }var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function (name) {\n        // If the name is already a valid ipv4 / ipv6 address, don't generate a fake one.\n        var res = __inet_pton4_raw(name);\n        if (res !== null) {\n          return name;\n        }\n        res = __inet_pton6_raw(name);\n        if (res !== null) {\n          return name;\n        }\n  \n        // See if this name is already mapped.\n        var addr;\n  \n        if (DNS.address_map.addrs[name]) {\n          addr = DNS.address_map.addrs[name];\n        } else {\n          var id = DNS.address_map.id++;\n          assert(id < 65535, 'exceeded max address mappings of 65535');\n  \n          addr = '172.29.' + (id & 0xff) + '.' + (id & 0xff00);\n  \n          DNS.address_map.names[addr] = name;\n          DNS.address_map.addrs[name] = addr;\n        }\n  \n        return addr;\n      },lookup_addr:function (addr) {\n        if (DNS.address_map.names[addr]) {\n          return DNS.address_map.names[addr];\n        }\n  \n        return null;\n      }};\n  \n  \n  var Sockets={BUFFER_SIZE:10240,MAX_BUFFER_SIZE:10485760,nextFd:1,fds:{},nextport:1,maxport:65535,peer:null,connections:{},portmap:{},localAddr:4261412874,addrPool:[33554442,50331658,67108874,83886090,100663306,117440522,134217738,150994954,167772170,184549386,201326602,218103818,234881034]};\n  \n  function __inet_ntop4_raw(addr) {\n      return (addr & 0xff) + '.' + ((addr >> 8) & 0xff) + '.' + ((addr >> 16) & 0xff) + '.' + ((addr >> 24) & 0xff)\n    }\n  \n  function __inet_ntop6_raw(ints) {\n      //  ref:  http://www.ietf.org/rfc/rfc2373.txt - section 2.5.4\n      //  Format for IPv4 compatible and mapped  128-bit IPv6 Addresses\n      //  128-bits are split into eight 16-bit words\n      //  stored in network byte order (big-endian)\n      //  |                80 bits               | 16 |      32 bits        |\n      //  +-----------------------------------------------------------------+\n      //  |               10 bytes               |  2 |      4 bytes        |\n      //  +--------------------------------------+--------------------------+\n      //  +               5 words                |  1 |      2 words        |\n      //  +--------------------------------------+--------------------------+\n      //  |0000..............................0000|0000|    IPv4 ADDRESS     | (compatible)\n      //  +--------------------------------------+----+---------------------+\n      //  |0000..............................0000|FFFF|    IPv4 ADDRESS     | (mapped)\n      //  +--------------------------------------+----+---------------------+\n      var str = \"\";\n      var word = 0;\n      var longest = 0;\n      var lastzero = 0;\n      var zstart = 0;\n      var len = 0;\n      var i = 0;\n      var parts = [\n        ints[0] & 0xffff,\n        (ints[0] >> 16),\n        ints[1] & 0xffff,\n        (ints[1] >> 16),\n        ints[2] & 0xffff,\n        (ints[2] >> 16),\n        ints[3] & 0xffff,\n        (ints[3] >> 16)\n      ];\n  \n      // Handle IPv4-compatible, IPv4-mapped, loopback and any/unspecified addresses\n  \n      var hasipv4 = true;\n      var v4part = \"\";\n      // check if the 10 high-order bytes are all zeros (first 5 words)\n      for (i = 0; i < 5; i++) {\n        if (parts[i] !== 0) { hasipv4 = false; break; }\n      }\n  \n      if (hasipv4) {\n        // low-order 32-bits store an IPv4 address (bytes 13 to 16) (last 2 words)\n        v4part = __inet_ntop4_raw(parts[6] | (parts[7] << 16));\n        // IPv4-mapped IPv6 address if 16-bit value (bytes 11 and 12) == 0xFFFF (6th word)\n        if (parts[5] === -1) {\n          str = \"::ffff:\";\n          str += v4part;\n          return str;\n        }\n        // IPv4-compatible IPv6 address if 16-bit value (bytes 11 and 12) == 0x0000 (6th word)\n        if (parts[5] === 0) {\n          str = \"::\";\n          //special case IPv6 addresses\n          if(v4part === \"0.0.0.0\") v4part = \"\"; // any/unspecified address\n          if(v4part === \"0.0.0.1\") v4part = \"1\";// loopback address\n          str += v4part;\n          return str;\n        }\n      }\n  \n      // Handle all other IPv6 addresses\n  \n      // first run to find the longest contiguous zero words\n      for (word = 0; word < 8; word++) {\n        if (parts[word] === 0) {\n          if (word - lastzero > 1) {\n            len = 0;\n          }\n          lastzero = word;\n          len++;\n        }\n        if (len > longest) {\n          longest = len;\n          zstart = word - longest + 1;\n        }\n      }\n  \n      for (word = 0; word < 8; word++) {\n        if (longest > 1) {\n          // compress contiguous zeros - to produce \"::\"\n          if (parts[word] === 0 && word >= zstart && word < (zstart + longest) ) {\n            if (word === zstart) {\n              str += \":\";\n              if (zstart === 0) str += \":\"; //leading zeros case\n            }\n            continue;\n          }\n        }\n        // converts 16-bit words from big-endian to little-endian before converting to hex string\n        str += Number(_ntohs(parts[word] & 0xffff)).toString(16);\n        str += word < 7 ? \":\" : \"\";\n      }\n      return str;\n    }function __read_sockaddr(sa, salen) {\n      // family / port offsets are common to both sockaddr_in and sockaddr_in6\n      var family = HEAP16[((sa)>>1)];\n      var port = _ntohs(HEAPU16[(((sa)+(2))>>1)]);\n      var addr;\n  \n      switch (family) {\n        case 2:\n          if (salen !== 16) {\n            return { errno: 28 };\n          }\n          addr = HEAP32[(((sa)+(4))>>2)];\n          addr = __inet_ntop4_raw(addr);\n          break;\n        case 10:\n          if (salen !== 28) {\n            return { errno: 28 };\n          }\n          addr = [\n            HEAP32[(((sa)+(8))>>2)],\n            HEAP32[(((sa)+(12))>>2)],\n            HEAP32[(((sa)+(16))>>2)],\n            HEAP32[(((sa)+(20))>>2)]\n          ];\n          addr = __inet_ntop6_raw(addr);\n          break;\n        default:\n          return { errno: 5 };\n      }\n  \n      return { family: family, addr: addr, port: port };\n    }\n  \n  function __write_sockaddr(sa, family, addr, port) {\n      switch (family) {\n        case 2:\n          addr = __inet_pton4_raw(addr);\n          HEAP16[((sa)>>1)]=family;\n          HEAP32[(((sa)+(4))>>2)]=addr;\n          HEAP16[(((sa)+(2))>>1)]=_htons(port);\n          break;\n        case 10:\n          addr = __inet_pton6_raw(addr);\n          HEAP32[((sa)>>2)]=family;\n          HEAP32[(((sa)+(8))>>2)]=addr[0];\n          HEAP32[(((sa)+(12))>>2)]=addr[1];\n          HEAP32[(((sa)+(16))>>2)]=addr[2];\n          HEAP32[(((sa)+(20))>>2)]=addr[3];\n          HEAP16[(((sa)+(2))>>1)]=_htons(port);\n          HEAP32[(((sa)+(4))>>2)]=0;\n          HEAP32[(((sa)+(24))>>2)]=0;\n          break;\n        default:\n          return { errno: 5 };\n      }\n      // kind of lame, but let's match _read_sockaddr's interface\n      return {};\n    }function ___sys_socketcall(call, socketvararg) {try {\n  \n      // socketcalls pass the rest of the arguments in a struct\n      SYSCALLS.varargs = socketvararg;\n  \n      var getSocketFromFD = function() {\n        var socket = SOCKFS.getSocket(SYSCALLS.get());\n        if (!socket) throw new FS.ErrnoError(8);\n        return socket;\n      };\n      /** @param {boolean=} allowNull */\n      var getSocketAddress = function(allowNull) {\n        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();\n        if (allowNull && addrp === 0) return null;\n        var info = __read_sockaddr(addrp, addrlen);\n        if (info.errno) throw new FS.ErrnoError(info.errno);\n        info.addr = DNS.lookup_addr(info.addr) || info.addr;\n        return info;\n      };\n  \n      switch (call) {\n        case 1: { // socket\n          var domain = SYSCALLS.get(), type = SYSCALLS.get(), protocol = SYSCALLS.get();\n          var sock = SOCKFS.createSocket(domain, type, protocol);\n          return sock.stream.fd;\n        }\n        case 2: { // bind\n          var sock = getSocketFromFD(), info = getSocketAddress();\n          sock.sock_ops.bind(sock, info.addr, info.port);\n          return 0;\n        }\n        case 3: { // connect\n          var sock = getSocketFromFD(), info = getSocketAddress();\n          sock.sock_ops.connect(sock, info.addr, info.port);\n          return 0;\n        }\n        case 4: { // listen\n          var sock = getSocketFromFD(), backlog = SYSCALLS.get();\n          sock.sock_ops.listen(sock, backlog);\n          return 0;\n        }\n        case 5: { // accept\n          var sock = getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();\n          var newsock = sock.sock_ops.accept(sock);\n          if (addr) {\n            var res = __write_sockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport);\n          }\n          return newsock.stream.fd;\n        }\n        case 6: { // getsockname\n          var sock = getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();\n          // TODO: sock.saddr should never be undefined, see TODO in websocket_sock_ops.getname\n          var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.saddr || '0.0.0.0'), sock.sport);\n          return 0;\n        }\n        case 7: { // getpeername\n          var sock = getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();\n          if (!sock.daddr) {\n            return -53; // The socket is not connected.\n          }\n          var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport);\n          return 0;\n        }\n        case 11: { // sendto\n          var sock = getSocketFromFD(), message = SYSCALLS.get(), length = SYSCALLS.get(), flags = SYSCALLS.get(), dest = getSocketAddress(true);\n          if (!dest) {\n            // send, no address provided\n            return FS.write(sock.stream, HEAP8,message, length);\n          } else {\n            // sendto an address\n            return sock.sock_ops.sendmsg(sock, HEAP8,message, length, dest.addr, dest.port);\n          }\n        }\n        case 12: { // recvfrom\n          var sock = getSocketFromFD(), buf = SYSCALLS.get(), len = SYSCALLS.get(), flags = SYSCALLS.get(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();\n          var msg = sock.sock_ops.recvmsg(sock, len);\n          if (!msg) return 0; // socket is closed\n          if (addr) {\n            var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port);\n          }\n          HEAPU8.set(msg.buffer, buf);\n          return msg.buffer.byteLength;\n        }\n        case 14: { // setsockopt\n          return -50; // The option is unknown at the level indicated.\n        }\n        case 15: { // getsockopt\n          var sock = getSocketFromFD(), level = SYSCALLS.get(), optname = SYSCALLS.get(), optval = SYSCALLS.get(), optlen = SYSCALLS.get();\n          // Minimal getsockopt aimed at resolving https://github.com/emscripten-core/emscripten/issues/2211\n          // so only supports SOL_SOCKET with SO_ERROR.\n          if (level === 1) {\n            if (optname === 4) {\n              HEAP32[((optval)>>2)]=sock.error;\n              HEAP32[((optlen)>>2)]=4;\n              sock.error = null; // Clear the error (The SO_ERROR option obtains and then clears this field).\n              return 0;\n            }\n          }\n          return -50; // The option is unknown at the level indicated.\n        }\n        case 16: { // sendmsg\n          var sock = getSocketFromFD(), message = SYSCALLS.get(), flags = SYSCALLS.get();\n          var iov = HEAP32[(((message)+(8))>>2)];\n          var num = HEAP32[(((message)+(12))>>2)];\n          // read the address and port to send to\n          var addr, port;\n          var name = HEAP32[((message)>>2)];\n          var namelen = HEAP32[(((message)+(4))>>2)];\n          if (name) {\n            var info = __read_sockaddr(name, namelen);\n            if (info.errno) return -info.errno;\n            port = info.port;\n            addr = DNS.lookup_addr(info.addr) || info.addr;\n          }\n          // concatenate scatter-gather arrays into one message buffer\n          var total = 0;\n          for (var i = 0; i < num; i++) {\n            total += HEAP32[(((iov)+((8 * i) + 4))>>2)];\n          }\n          var view = new Uint8Array(total);\n          var offset = 0;\n          for (var i = 0; i < num; i++) {\n            var iovbase = HEAP32[(((iov)+((8 * i) + 0))>>2)];\n            var iovlen = HEAP32[(((iov)+((8 * i) + 4))>>2)];\n            for (var j = 0; j < iovlen; j++) {  \n              view[offset++] = HEAP8[(((iovbase)+(j))>>0)];\n            }\n          }\n          // write the buffer\n          return sock.sock_ops.sendmsg(sock, view, 0, total, addr, port);\n        }\n        case 17: { // recvmsg\n          var sock = getSocketFromFD(), message = SYSCALLS.get(), flags = SYSCALLS.get();\n          var iov = HEAP32[(((message)+(8))>>2)];\n          var num = HEAP32[(((message)+(12))>>2)];\n          // get the total amount of data we can read across all arrays\n          var total = 0;\n          for (var i = 0; i < num; i++) {\n            total += HEAP32[(((iov)+((8 * i) + 4))>>2)];\n          }\n          // try to read total data\n          var msg = sock.sock_ops.recvmsg(sock, total);\n          if (!msg) return 0; // socket is closed\n  \n          // TODO honor flags:\n          // MSG_OOB\n          // Requests out-of-band data. The significance and semantics of out-of-band data are protocol-specific.\n          // MSG_PEEK\n          // Peeks at the incoming message.\n          // MSG_WAITALL\n          // Requests that the function block until the full amount of data requested can be returned. The function may return a smaller amount of data if a signal is caught, if the connection is terminated, if MSG_PEEK was specified, or if an error is pending for the socket.\n  \n          // write the source address out\n          var name = HEAP32[((message)>>2)];\n          if (name) {\n            var res = __write_sockaddr(name, sock.family, DNS.lookup_name(msg.addr), msg.port);\n          }\n          // write the buffer out to the scatter-gather arrays\n          var bytesRead = 0;\n          var bytesRemaining = msg.buffer.byteLength;\n          for (var i = 0; bytesRemaining > 0 && i < num; i++) {\n            var iovbase = HEAP32[(((iov)+((8 * i) + 0))>>2)];\n            var iovlen = HEAP32[(((iov)+((8 * i) + 4))>>2)];\n            if (!iovlen) {\n              continue;\n            }\n            var length = Math.min(iovlen, bytesRemaining);\n            var buf = msg.buffer.subarray(bytesRead, bytesRead + length);\n            HEAPU8.set(buf, iovbase + bytesRead);\n            bytesRead += length;\n            bytesRemaining -= length;\n          }\n  \n          // TODO set msghdr.msg_flags\n          // MSG_EOR\n          // End of record was received (if supported by the protocol).\n          // MSG_OOB\n          // Out-of-band data was received.\n          // MSG_TRUNC\n          // Normal data was truncated.\n          // MSG_CTRUNC\n  \n          return bytesRead;\n        }\n        default: {\n          return -52; // unsupported feature\n        }\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall102(a0,a1\n  ) {\n  return ___sys_socketcall(a0,a1);\n  }\n\n  \n  function ___sys_wait4(pid, wstart, options, rusage) {try {\n  \n      abort('cannot wait on child processes');\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall114(a0,a1,a2,a3\n  ) {\n  return ___sys_wait4(a0,a1,a2,a3);\n  }\n\n  \n  function ___sys_chdir(path) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall12(a0\n  ) {\n  return ___sys_chdir(a0);\n  }\n\n  \n  function ___sys_uname(buf) {try {\n  \n      if (!buf) return -21\n      var layout = {\"__size__\":390,\"sysname\":0,\"nodename\":65,\"release\":130,\"version\":195,\"machine\":260,\"domainname\":325};\n      var copyString = function(element, value) {\n        var offset = layout[element];\n        writeAsciiToMemory(value, buf + offset);\n      };\n      copyString('sysname', 'Emscripten');\n      copyString('nodename', 'emscripten');\n      copyString('release', '1.0');\n      copyString('version', '#1');\n      copyString('machine', 'x86-JS');\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall122(a0\n  ) {\n  return ___sys_uname(a0);\n  }\n\n  \n  function ___sys__newselect(nfds, readfds, writefds, exceptfds, timeout) {try {\n  \n      // readfds are supported,\n      // writefds checks socket open status\n      // exceptfds not supported\n      // timeout is always 0 - fully async\n  \n      var total = 0;\n      \n      var srcReadLow = (readfds ? HEAP32[((readfds)>>2)] : 0),\n          srcReadHigh = (readfds ? HEAP32[(((readfds)+(4))>>2)] : 0);\n      var srcWriteLow = (writefds ? HEAP32[((writefds)>>2)] : 0),\n          srcWriteHigh = (writefds ? HEAP32[(((writefds)+(4))>>2)] : 0);\n      var srcExceptLow = (exceptfds ? HEAP32[((exceptfds)>>2)] : 0),\n          srcExceptHigh = (exceptfds ? HEAP32[(((exceptfds)+(4))>>2)] : 0);\n  \n      var dstReadLow = 0,\n          dstReadHigh = 0;\n      var dstWriteLow = 0,\n          dstWriteHigh = 0;\n      var dstExceptLow = 0,\n          dstExceptHigh = 0;\n  \n      var allLow = (readfds ? HEAP32[((readfds)>>2)] : 0) |\n                   (writefds ? HEAP32[((writefds)>>2)] : 0) |\n                   (exceptfds ? HEAP32[((exceptfds)>>2)] : 0);\n      var allHigh = (readfds ? HEAP32[(((readfds)+(4))>>2)] : 0) |\n                    (writefds ? HEAP32[(((writefds)+(4))>>2)] : 0) |\n                    (exceptfds ? HEAP32[(((exceptfds)+(4))>>2)] : 0);\n  \n      var check = function(fd, low, high, val) {\n        return (fd < 32 ? (low & val) : (high & val));\n      };\n  \n      for (var fd = 0; fd < nfds; fd++) {\n        var mask = 1 << (fd % 32);\n        if (!(check(fd, allLow, allHigh, mask))) {\n          continue;  // index isn't in the set\n        }\n  \n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n  \n        var flags = SYSCALLS.DEFAULT_POLLMASK;\n  \n        if (stream.stream_ops.poll) {\n          flags = stream.stream_ops.poll(stream);\n        }\n  \n        if ((flags & 1) && check(fd, srcReadLow, srcReadHigh, mask)) {\n          fd < 32 ? (dstReadLow = dstReadLow | mask) : (dstReadHigh = dstReadHigh | mask);\n          total++;\n        }\n        if ((flags & 4) && check(fd, srcWriteLow, srcWriteHigh, mask)) {\n          fd < 32 ? (dstWriteLow = dstWriteLow | mask) : (dstWriteHigh = dstWriteHigh | mask);\n          total++;\n        }\n        if ((flags & 2) && check(fd, srcExceptLow, srcExceptHigh, mask)) {\n          fd < 32 ? (dstExceptLow = dstExceptLow | mask) : (dstExceptHigh = dstExceptHigh | mask);\n          total++;\n        }\n      }\n  \n      if (readfds) {\n        HEAP32[((readfds)>>2)]=dstReadLow;\n        HEAP32[(((readfds)+(4))>>2)]=dstReadHigh;\n      }\n      if (writefds) {\n        HEAP32[((writefds)>>2)]=dstWriteLow;\n        HEAP32[(((writefds)+(4))>>2)]=dstWriteHigh;\n      }\n      if (exceptfds) {\n        HEAP32[((exceptfds)>>2)]=dstExceptLow;\n        HEAP32[(((exceptfds)+(4))>>2)]=dstExceptHigh;\n      }\n      \n      return total;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall142(a0,a1,a2,a3,a4\n  ) {\n  return ___sys__newselect(a0,a1,a2,a3,a4);\n  }\n\n  \n  function ___sys_chmod(path, mode) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chmod(path, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall15(a0,a1\n  ) {\n  return ___sys_chmod(a0,a1);\n  }\n\n  \n  function ___sys_mremap(old_addr, old_size, new_size, flags) {\n      return -48; // never succeed\n    }function ___syscall163(a0,a1,a2,a3,a4\n  ) {\n  return ___sys_mremap(a0,a1,a2,a3,a4);\n  }\n\n  \n  function ___sys_poll(fds, nfds, timeout) {try {\n  \n      var nonzero = 0;\n      for (var i = 0; i < nfds; i++) {\n        var pollfd = fds + 8 * i;\n        var fd = HEAP32[((pollfd)>>2)];\n        var events = HEAP16[(((pollfd)+(4))>>1)];\n        var mask = 32;\n        var stream = FS.getStream(fd);\n        if (stream) {\n          mask = SYSCALLS.DEFAULT_POLLMASK;\n          if (stream.stream_ops.poll) {\n            mask = stream.stream_ops.poll(stream);\n          }\n        }\n        mask &= events | 8 | 16;\n        if (mask) nonzero++;\n        HEAP16[(((pollfd)+(6))>>1)]=mask;\n      }\n      return nonzero;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall168(a0,a1,a2\n  ) {\n  return ___sys_poll(a0,a1,a2);\n  }\n\n  \n  function ___sys_getcwd(buf, size) {try {\n  \n      if (size === 0) return -28;\n      var cwd = FS.cwd();\n      var cwdLengthInBytes = lengthBytesUTF8(cwd);\n      if (size < cwdLengthInBytes + 1) return -68;\n      stringToUTF8(cwd, buf, size);\n      return buf;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall183(a0,a1\n  ) {\n  return ___sys_getcwd(a0,a1);\n  }\n\n  \n  \n  \n  \n   function syscallMmap2(addr, len, prot, flags, fd, off) {\n      off <<= 12; // undo pgoffset\n      var ptr;\n      var allocated = false;\n  \n      // addr argument must be page aligned if MAP_FIXED flag is set.\n      if ((flags & 16) !== 0 && (addr % 16384) !== 0) {\n        return -28;\n      }\n  \n      // MAP_ANONYMOUS (aka MAP_ANON) isn't actually defined by POSIX spec,\n      // but it is widely used way to allocate memory pages on Linux, BSD and Mac.\n      // In this case fd argument is ignored.\n      if ((flags & 32) !== 0) {\n        ptr = _memalign(16384, len);\n        if (!ptr) return -48;\n        _memset(ptr, 0, len);\n        allocated = true;\n      } else {\n        var info = FS.getStream(fd);\n        if (!info) return -8;\n        var res = FS.mmap(info, addr, len, off, prot, flags);\n        ptr = res.ptr;\n        allocated = res.allocated;\n      }\n      SYSCALLS.mappings[ptr] = { malloc: ptr, len: len, allocated: allocated, fd: fd, prot: prot, flags: flags, offset: off };\n      return ptr;\n    }function ___sys_mmap2(addr, len, prot, flags, fd, off) {try {\n  \n      return syscallMmap2(addr, len, prot, flags, fd, off);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall192(a0,a1,a2,a3,a4,a5\n  ) {\n  return ___sys_mmap2(a0,a1,a2,a3,a4,a5);\n  }\n\n  \n  function ___sys_ftruncate64(fd, zero, low, high) {try {\n  \n      var length = SYSCALLS.get64(low, high);\n      FS.ftruncate(fd, length);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall194(a0,a1,a2,a3\n  ) {\n  return ___sys_ftruncate64(a0,a1,a2,a3);\n  }\n\n  \n  function ___sys_stat64(path, buf) {try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall195(a0,a1\n  ) {\n  return ___sys_stat64(a0,a1);\n  }\n\n  \n  function ___sys_lstat64(path, buf) {try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.lstat, path, buf);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall196(a0,a1\n  ) {\n  return ___sys_lstat64(a0,a1);\n  }\n\n  \n  function ___sys_fstat64(fd, buf) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall197(a0,a1\n  ) {\n  return ___sys_fstat64(a0,a1);\n  }\n\n  \n  function ___sys_lchown32(path, owner, group) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chown(path, owner, group); // XXX we ignore the 'l' aspect, and do the same as chown\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall198(a0,a1,a2\n  ) {\n  return ___sys_lchown32(a0,a1,a2);\n  }\n\n  \n  \n  function ___sys_getegid32() {\n      return 0;\n    }function ___sys_getuid32(\n  ) {\n  return ___sys_getegid32();\n  }function ___syscall199(\n  ) {\n  return ___sys_getuid32();\n  }\n\n  \n  function ___sys_getpid() {\n      return 42;\n    }function ___syscall20(\n  ) {\n  return ___sys_getpid();\n  }\n\n  \n  function ___sys_getgid32(\n  ) {\n  return ___sys_getegid32();\n  }function ___syscall200(\n  ) {\n  return ___sys_getgid32();\n  }\n\n  \n  function ___sys_geteuid32(\n  ) {\n  return ___sys_getegid32();\n  }function ___syscall201(\n  ) {\n  return ___sys_geteuid32();\n  }\n\n  \n  function ___sys_getgroups32(size, list) {\n      if (size < 1) return -28;\n      HEAP32[((list)>>2)]=0;\n      return 1;\n    }function ___syscall205(a0,a1\n  ) {\n  return ___sys_getgroups32(a0,a1);\n  }\n\n  \n  function ___sys_fchown32(fd, owner, group) {try {\n  \n      FS.fchown(fd, owner, group);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall207(a0,a1,a2\n  ) {\n  return ___sys_fchown32(a0,a1,a2);\n  }\n\n  \n  function ___sys_chown32(path, owner, group) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chown(path, owner, group);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall212(a0,a1,a2\n  ) {\n  return ___sys_chown32(a0,a1,a2);\n  }\n\n  \n  function ___sys_madvise1(addr, length, advice) {\n      return 0; // advice is welcome, but ignored\n    }function ___syscall219(a0,a1,a2\n  ) {\n  return ___sys_madvise1(a0,a1,a2);\n  }\n\n  \n  function ___sys_getdents64(fd, dirp, count) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      if (!stream.getdents) {\n        stream.getdents = FS.readdir(stream.path);\n      }\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var idx = Math.floor(off / struct_size);\n  \n      while (idx < stream.getdents.length && pos + struct_size <= count) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name[0] === '.') {\n          id = 1;\n          type = 4; // DT_DIR\n        } else {\n          var child = FS.lookupNode(stream.node, name);\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((dirp + pos)>>2)]=tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)]=tempI64[1]);\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((dirp + pos)+(8))>>2)]=tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)]=tempI64[1]);\n        HEAP16[(((dirp + pos)+(16))>>1)]=280;\n        HEAP8[(((dirp + pos)+(18))>>0)]=type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n        idx += 1;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall220(a0,a1,a2\n  ) {\n  return ___sys_getdents64(a0,a1,a2);\n  }\n\n  \n  function ___sys_fcntl64(fd, cmd, varargs) {SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -28;\n          }\n          var newStream;\n          newStream = FS.open(stream.path, stream.flags, 0, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12:\n        /* case 12: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\n          \n          var arg = SYSCALLS.get();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)]=2;\n          return 0;\n        }\n        case 13:\n        case 14:\n        /* case 13: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\n        /* case 14: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\n          \n          \n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -28; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.\n          setErrNo(28);\n          return -1;\n        default: {\n          return -28;\n        }\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall221(a0,a1,a2\n  ) {\n  return ___sys_fcntl64(a0,a1,a2);\n  }\n\n  \n  function ___sys_statfs64(path, size, buf) {try {\n  \n      path = SYSCALLS.getStr(path);\n      // NOTE: None of the constants here are true. We're just returning safe and\n      //       sane values.\n      HEAP32[(((buf)+(4))>>2)]=4096;\n      HEAP32[(((buf)+(40))>>2)]=4096;\n      HEAP32[(((buf)+(8))>>2)]=1000000;\n      HEAP32[(((buf)+(12))>>2)]=500000;\n      HEAP32[(((buf)+(16))>>2)]=500000;\n      HEAP32[(((buf)+(20))>>2)]=FS.nextInode;\n      HEAP32[(((buf)+(24))>>2)]=1000000;\n      HEAP32[(((buf)+(28))>>2)]=42;\n      HEAP32[(((buf)+(44))>>2)]=2;  // ST_NOSUID\n      HEAP32[(((buf)+(36))>>2)]=255;\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall268(a0,a1,a2\n  ) {\n  return ___sys_statfs64(a0,a1,a2);\n  }\n\n  \n  function ___sys_read(fd, buf, count) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return FS.read(stream, HEAP8,buf, count);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall3(a0,a1,a2\n  ) {\n  return ___sys_read(a0,a1,a2);\n  }\n\n  \n  function ___sys_access(path, amode) {try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doAccess(path, amode);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall33(a0,a1\n  ) {\n  return ___sys_access(a0,a1);\n  }\n\n  \n  function ___sys_nice(inc) {\n      return -63; // no meaning to nice for our single-process environment\n    }function ___syscall34(a0\n  ) {\n  return ___sys_nice(a0);\n  }\n\n  \n  function ___sys_rename(old_path, new_path) {try {\n  \n      old_path = SYSCALLS.getStr(old_path);\n      new_path = SYSCALLS.getStr(new_path);\n      FS.rename(old_path, new_path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall38(a0,a1\n  ) {\n  return ___sys_rename(a0,a1);\n  }\n\n  \n  function ___sys_mkdir(path, mode) {try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doMkdir(path, mode);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall39(a0,a1\n  ) {\n  return ___sys_mkdir(a0,a1);\n  }\n\n  \n  function ___sys_rmdir(path) {try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall40(a0\n  ) {\n  return ___sys_rmdir(a0);\n  }\n\n  \n  function ___sys_dup(fd) {try {\n  \n      var old = SYSCALLS.getStreamFromFD(fd);\n      return FS.open(old.path, old.flags, 0).fd;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall41(a0\n  ) {\n  return ___sys_dup(a0);\n  }\n\n  \n  \n  var PIPEFS={BUCKET_BUFFER_SIZE:8192,mount:function (mount) {\n        // Do not pollute the real root directory or its child nodes with pipes\n        // Looks like it is OK to create another pseudo-root node not linked to the FS.root hierarchy this way\n        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createPipe:function () {\n        var pipe = {\n          buckets: []\n        };\n  \n        pipe.buckets.push({\n          buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n          offset: 0,\n          roffset: 0\n        });\n  \n        var rName = PIPEFS.nextname();\n        var wName = PIPEFS.nextname();\n        var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\n        var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\n  \n        rNode.pipe = pipe;\n        wNode.pipe = pipe;\n  \n        var readableStream = FS.createStream({\n          path: rName,\n          node: rNode,\n          flags: FS.modeStringToFlags('r'),\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops\n        });\n        rNode.stream = readableStream;\n  \n        var writableStream = FS.createStream({\n          path: wName,\n          node: wNode,\n          flags: FS.modeStringToFlags('w'),\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops\n        });\n        wNode.stream = writableStream;\n  \n        return {\n          readable_fd: readableStream.fd,\n          writable_fd: writableStream.fd\n        };\n      },stream_ops:{poll:function (stream) {\n          var pipe = stream.node.pipe;\n  \n          if ((stream.flags & 2097155) === 1) {\n            return (256 | 4);\n          } else {\n            if (pipe.buckets.length > 0) {\n              for (var i = 0; i < pipe.buckets.length; i++) {\n                var bucket = pipe.buckets[i];\n                if (bucket.offset - bucket.roffset > 0) {\n                  return (64 | 1);\n                }\n              }\n            }\n          }\n  \n          return 0;\n        },ioctl:function (stream, request, varargs) {\n          return ERRNO_CODES.EINVAL;\n        },fsync:function (stream) {\n          return ERRNO_CODES.EINVAL;\n        },read:function (stream, buffer, offset, length, position /* ignored */) {\n          var pipe = stream.node.pipe;\n          var currentLength = 0;\n  \n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var bucket = pipe.buckets[i];\n            currentLength += bucket.offset - bucket.roffset;\n          }\n  \n          assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n          var data = buffer.subarray(offset, offset + length);\n  \n          if (length <= 0) {\n            return 0;\n          }\n          if (currentLength == 0) {\n            // Behave as if the read end is always non-blocking\n            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n          }\n          var toRead = Math.min(currentLength, length);\n  \n          var totalRead = toRead;\n          var toRemove = 0;\n  \n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var currBucket = pipe.buckets[i];\n            var bucketSize = currBucket.offset - currBucket.roffset;\n  \n            if (toRead <= bucketSize) {\n              var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n              if (toRead < bucketSize) {\n                tmpSlice = tmpSlice.subarray(0, toRead);\n                currBucket.roffset += toRead;\n              } else {\n                toRemove++;\n              }\n              data.set(tmpSlice);\n              break;\n            } else {\n              var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);\n              data.set(tmpSlice);\n              data = data.subarray(tmpSlice.byteLength);\n              toRead -= tmpSlice.byteLength;\n              toRemove++;\n            }\n          }\n  \n          if (toRemove && toRemove == pipe.buckets.length) {\n            // Do not generate excessive garbage in use cases such as\n            // write several bytes, read everything, write several bytes, read everything...\n            toRemove--;\n            pipe.buckets[toRemove].offset = 0;\n            pipe.buckets[toRemove].roffset = 0;\n          }\n  \n          pipe.buckets.splice(0, toRemove);\n  \n          return totalRead;\n        },write:function (stream, buffer, offset, length, position /* ignored */) {\n          var pipe = stream.node.pipe;\n  \n          assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));\n          var data = buffer.subarray(offset, offset + length);\n  \n          var dataLen = data.byteLength;\n          if (dataLen <= 0) {\n            return 0;\n          }\n  \n          var currBucket = null;\n  \n          if (pipe.buckets.length == 0) {\n            currBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: 0,\n              roffset: 0\n            };\n            pipe.buckets.push(currBucket);\n          } else {\n            currBucket = pipe.buckets[pipe.buckets.length - 1];\n          }\n  \n          assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\n  \n          var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\n          if (freeBytesInCurrBuffer >= dataLen) {\n            currBucket.buffer.set(data, currBucket.offset);\n            currBucket.offset += dataLen;\n            return dataLen;\n          } else if (freeBytesInCurrBuffer > 0) {\n            currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);\n            currBucket.offset += freeBytesInCurrBuffer;\n            data = data.subarray(freeBytesInCurrBuffer, data.byteLength);\n          }\n  \n          var numBuckets = (data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE) | 0;\n          var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\n  \n          for (var i = 0; i < numBuckets; i++) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: PIPEFS.BUCKET_BUFFER_SIZE,\n              roffset: 0\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\n            data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);\n          }\n  \n          if (remElements > 0) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: data.byteLength,\n              roffset: 0\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data);\n          }\n  \n          return dataLen;\n        },close:function (stream) {\n          var pipe = stream.node.pipe;\n          pipe.buckets = null;\n        }},nextname:function () {\n        if (!PIPEFS.nextname.current) {\n          PIPEFS.nextname.current = 0;\n        }\n        return 'pipe[' + (PIPEFS.nextname.current++) + ']';\n      }};function ___sys_pipe(fdPtr) {try {\n  \n      if (fdPtr == 0) {\n        throw new FS.ErrnoError(21);\n      }\n  \n      var res = PIPEFS.createPipe();\n  \n      HEAP32[((fdPtr)>>2)]=res.readable_fd;\n      HEAP32[(((fdPtr)+(4))>>2)]=res.writable_fd;\n  \n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall42(a0\n  ) {\n  return ___sys_pipe(a0);\n  }\n\n  \n  function ___sys_open(path, flags, varargs) {SYSCALLS.varargs = varargs;\n  try {\n  \n      var pathname = SYSCALLS.getStr(path);\n      var mode = SYSCALLS.get();\n      var stream = FS.open(pathname, flags, mode);\n      return stream.fd;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall5(a0,a1,a2\n  ) {\n  return ___sys_open(a0,a1,a2);\n  }\n\n  \n  function ___sys_ioctl(fd, op, varargs) {SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509:\n        case 21505: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512:\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = SYSCALLS.get();\n          HEAP32[((argp)>>2)]=0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.get();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: abort('bad ioctl syscall ' + op);\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall54(a0,a1,a2\n  ) {\n  return ___sys_ioctl(a0,a1,a2);\n  }\n\n  \n  function ___sys_umask(mask) {try {\n  \n      var old = SYSCALLS.umask;\n      SYSCALLS.umask = mask;\n      return old;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall60(a0\n  ) {\n  return ___sys_umask(a0);\n  }\n\n  \n  function ___sys_dup2(oldfd, suggestFD) {try {\n  \n      var old = SYSCALLS.getStreamFromFD(oldfd);\n      if (old.fd === suggestFD) return suggestFD;\n      return SYSCALLS.doDup(old.path, old.flags, suggestFD);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall63(a0,a1\n  ) {\n  return ___sys_dup2(a0,a1);\n  }\n\n  \n  function ___sys_getrusage(who, usage) {try {\n  \n      _memset(usage, 0, 136);\n      HEAP32[((usage)>>2)]=1; // fake some values\n      HEAP32[(((usage)+(4))>>2)]=2;\n      HEAP32[(((usage)+(8))>>2)]=3;\n      HEAP32[(((usage)+(12))>>2)]=4;\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall77(a0,a1\n  ) {\n  return ___sys_getrusage(a0,a1);\n  }\n\n  \n  function ___sys_symlink(target, linkpath) {try {\n  \n      target = SYSCALLS.getStr(target);\n      linkpath = SYSCALLS.getStr(linkpath);\n      FS.symlink(target, linkpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall83(a0,a1\n  ) {\n  return ___sys_symlink(a0,a1);\n  }\n\n  \n  function ___sys_readlink(path, buf, bufsize) {try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doReadlink(path, buf, bufsize);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall85(a0,a1,a2\n  ) {\n  return ___sys_readlink(a0,a1,a2);\n  }\n\n  \n  function ___sys_link(oldpath, newpath) {\n      return -34; // no hardlinks for us\n    }function ___syscall9(a0,a1\n  ) {\n  return ___sys_link(a0,a1);\n  }\n\n  \n  \n  function syscallMunmap(addr, len) {\n      if ((addr | 0) === -1 || len === 0) {\n        return -28;\n      }\n      // TODO: support unmmap'ing parts of allocations\n      var info = SYSCALLS.mappings[addr];\n      if (!info) return 0;\n      if (len === info.len) {\n        var stream = FS.getStream(info.fd);\n        if (info.prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\n        }\n        FS.munmap(stream);\n        SYSCALLS.mappings[addr] = null;\n        if (info.allocated) {\n          _free(info.malloc);\n        }\n      }\n      return 0;\n    }function ___sys_munmap(addr, len) {try {\n  \n      return syscallMunmap(addr, len);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall91(a0,a1\n  ) {\n  return ___sys_munmap(a0,a1);\n  }\n\n  \n  function ___sys_fchmod(fd, mode) {try {\n  \n      FS.fchmod(fd, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }function ___syscall94(a0,a1\n  ) {\n  return ___sys_fchmod(a0,a1);\n  }\n\n  \n  function _fd_close(fd) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_close(a0\n  ) {\n  return _fd_close(a0);\n  }\n\n  \n  function _fd_fdstat_get(fd, pbuf) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      // All character devices are terminals (other things a Linux system would\n      // assume is a character device, like the mouse, we have special APIs for).\n      var type = stream.tty ? 2 :\n                 FS.isDir(stream.mode) ? 3 :\n                 FS.isLink(stream.mode) ? 7 :\n                 4;\n      HEAP8[((pbuf)>>0)]=type;\n      // TODO HEAP16[(((pbuf)+(2))>>1)]=?;\n      // TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(8))>>2)]=tempI64[0],HEAP32[(((pbuf)+(12))>>2)]=tempI64[1]);\n      // TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(16))>>2)]=tempI64[0],HEAP32[(((pbuf)+(20))>>2)]=tempI64[1]);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_fdstat_get(a0,a1\n  ) {\n  return _fd_fdstat_get(a0,a1);\n  }\n\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n      HEAP32[((pnum)>>2)]=num\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_read(a0,a1,a2,a3\n  ) {\n  return _fd_read(a0,a1,a2,a3);\n  }\n\n  \n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {try {\n  \n      \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var HIGH_OFFSET = 0x100000000; // 2^32\n      // use an unsigned operator on low and shift high by 32-bits\n      var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n  \n      var DOUBLE_LIMIT = 0x20000000000000; // 2^53\n      // we also check for equality since DOUBLE_LIMIT + 1 == DOUBLE_LIMIT\n      if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n        return -61;\n      }\n  \n      FS.llseek(stream, offset, whence);\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((newOffset)>>2)]=tempI64[0],HEAP32[(((newOffset)+(4))>>2)]=tempI64[1]);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_seek(a0,a1,a2,a3,a4\n  ) {\n  return _fd_seek(a0,a1,a2,a3,a4);\n  }\n\n  \n  function _fd_sync(fd) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      if (stream.stream_ops && stream.stream_ops.fsync) {\n        return -stream.stream_ops.fsync(stream);\n      }\n      return 0; // we can't do anything synchronously; the in-memory FS is already synced to\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_sync(a0\n  ) {\n  return _fd_sync(a0);\n  }\n\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n      HEAP32[((pnum)>>2)]=num\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_write(a0,a1,a2,a3\n  ) {\n  return _fd_write(a0,a1,a2,a3);\n  }\n\n  \n  function _exit(status) {\n      // void _exit(int status);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\n      exit(status);\n    }function __exit(a0\n  ) {\n  return _exit(a0);\n  }\n\n  function _abort() {\n      abort();\n    }\n\n  \n  var ___tm_formatted=2285136;\n  \n  \n  function _tzset() {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      if (_tzset.called) return;\n      _tzset.called = true;\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by getTimezoneOffset().\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAP32[((__get_timezone())>>2)]=(new Date()).getTimezoneOffset() * 60;\n  \n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      HEAP32[((__get_daylight())>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());\n  \n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {\n        // Northern hemisphere\n        HEAP32[((__get_tzname())>>2)]=winterNamePtr;\n        HEAP32[(((__get_tzname())+(4))>>2)]=summerNamePtr;\n      } else {\n        HEAP32[((__get_tzname())>>2)]=summerNamePtr;\n        HEAP32[(((__get_tzname())+(4))>>2)]=winterNamePtr;\n      }\n    }function _mktime(tmPtr) {\n      _tzset();\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)]=Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();\n      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)]=yday;\n  \n      return (date.getTime() / 1000)|0;\n    }function _asctime_r(tmPtr, buf) {\n      var date = {\n        tm_sec: HEAP32[((tmPtr)>>2)],\n        tm_min: HEAP32[(((tmPtr)+(4))>>2)],\n        tm_hour: HEAP32[(((tmPtr)+(8))>>2)],\n        tm_mday: HEAP32[(((tmPtr)+(12))>>2)],\n        tm_mon: HEAP32[(((tmPtr)+(16))>>2)],\n        tm_year: HEAP32[(((tmPtr)+(20))>>2)],\n        tm_wday: HEAP32[(((tmPtr)+(24))>>2)]\n      };\n      var days = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ];\n      var months = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                     \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n      var s = days[date.tm_wday] + ' ' + months[date.tm_mon] +\n          (date.tm_mday < 10 ? '  ' : ' ') + date.tm_mday +\n          (date.tm_hour < 10 ? ' 0' : ' ') + date.tm_hour +\n          (date.tm_min < 10 ? ':0' : ':') + date.tm_min +\n          (date.tm_sec < 10 ? ':0' : ':') + date.tm_sec +\n          ' ' + (1900 + date.tm_year) + \"\\n\";\n  \n      // asctime_r is specced to behave in an undefined manner if the algorithm would attempt\n      // to write out more than 26 bytes (including the null terminator).\n      // See http://pubs.opengroup.org/onlinepubs/9699919799/functions/asctime.html\n      // Our undefined behavior is to truncate the write to at most 26 bytes, including null terminator.\n      stringToUTF8(s, buf, 26);\n      return buf;\n    }\n\n  function _chroot(path) {\n      // int chroot(const char *path);\n      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/chroot.html\n      setErrNo(2);\n      return -1;\n    }\n\n\n  function _difftime(time1, time0) {\n      return time1 - time0;\n    }\n\n  function _dlclose(handle) {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n  function _dlerror() {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n  function _dlopen(filename, flag) {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n  function _dlsym(handle, symbol) {\n      abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\");\n    }\n\n  function _emscripten_asm_const_int() {}\n\n  function _emscripten_get_heap_size() {\n      return HEAPU8.length;\n    }\n\n   \n\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('OOM');\n    }function _emscripten_resize_heap(requestedSize) {\n      requestedSize = requestedSize >>> 0;\n      abortOnCannotGrowMemory(requestedSize);\n    }\n\n  function _execl(path, arg0, varArgs) {\n      // int execl(const char *path, const char *arg0, ... /*, (char *)0 */);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/exec.html\n      // We don't support executing external code.\n      setErrNo(45);\n      return -1;\n    }\n\n  function _execle(a0,a1,a2\n  ) {\n  return _execl(a0,a1,a2);\n  }\n\n  function _execvp(a0,a1,a2\n  ) {\n  return _execl(a0,a1,a2);\n  }\n\n\n  function _flock(fd, operation) {\n      // int flock(int fd, int operation);\n      // Pretend to succeed\n      return 0;\n    }\n\n  function _fork() {\n      // pid_t fork(void);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fork.html\n      // We don't support multiple processes.\n      setErrNo(6);\n      return -1;\n    }\n\n  /** @type {function(...*):?} */\n  function _getdtablesize(\n  ) {\n  err('missing function: getdtablesize'); abort(-1);\n  }\n\n  function _getenv(name) {\n      // char *getenv(const char *name);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html\n      if (name === 0) return 0;\n      name = UTF8ToString(name);\n      if (!ENV.hasOwnProperty(name)) return 0;\n  \n      if (_getenv.ret) _free(_getenv.ret);\n      _getenv.ret = allocateUTF8(ENV[name]);\n      return _getenv.ret;\n    }\n\n  function _getgrnam() { throw 'getgrnam: TODO' }\n\n  \n  function _gethostbyname(name) {\n      name = UTF8ToString(name);\n  \n      // generate hostent\n      var ret = _malloc(20); // XXX possibly leaked, as are others here\n      var nameBuf = _malloc(name.length+1);\n      stringToUTF8(name, nameBuf, name.length+1);\n      HEAP32[((ret)>>2)]=nameBuf;\n      var aliasesBuf = _malloc(4);\n      HEAP32[((aliasesBuf)>>2)]=0;\n      HEAP32[(((ret)+(4))>>2)]=aliasesBuf;\n      var afinet = 2;\n      HEAP32[(((ret)+(8))>>2)]=afinet;\n      HEAP32[(((ret)+(12))>>2)]=4;\n      var addrListBuf = _malloc(12);\n      HEAP32[((addrListBuf)>>2)]=addrListBuf+8;\n      HEAP32[(((addrListBuf)+(4))>>2)]=0;\n      HEAP32[(((addrListBuf)+(8))>>2)]=__inet_pton4_raw(DNS.lookup_name(name));\n      HEAP32[(((ret)+(16))>>2)]=addrListBuf;\n      return ret;\n    }function _gethostbyaddr(addr, addrlen, type) {\n      if (type !== 2) {\n        setErrNo(5);\n        // TODO: set h_errno\n        return null;\n      }\n      addr = HEAP32[((addr)>>2)]; // addr is in_addr\n      var host = __inet_ntop4_raw(addr);\n      var lookup = DNS.lookup_addr(host);\n      if (lookup) {\n        host = lookup;\n      }\n      var hostp = allocate(intArrayFromString(host), 'i8', ALLOC_STACK);\n      return _gethostbyname(hostp);\n    }\n\n  function _gethostbyname_r(name, ret, buf, buflen, out, err) {\n      var data = _gethostbyname(name);\n      _memcpy(ret, data, 20);\n      _free(data);\n      HEAP32[((err)>>2)]=0;\n      HEAP32[((out)>>2)]=ret;\n      return 0;\n    }\n\n  function _getloadavg(loadavg, nelem) {\n      // int getloadavg(double loadavg[], int nelem);\n      // http://linux.die.net/man/3/getloadavg\n      var limit = Math.min(nelem, 3);\n      var doubleSize = 8;\n      for (var i = 0; i < limit; i++) {\n        HEAPF64[(((loadavg)+(i * doubleSize))>>3)]=0.1;\n      }\n      return limit;\n    }\n\n  \n  \n  var Protocols={list:[],map:{}};function _setprotoent(stayopen) {\n      // void setprotoent(int stayopen);\n  \n      // Allocate and populate a protoent structure given a name, protocol number and array of aliases\n      function allocprotoent(name, proto, aliases) {\n        // write name into buffer\n        var nameBuf = _malloc(name.length + 1);\n        writeAsciiToMemory(name, nameBuf);\n  \n        // write aliases into buffer\n        var j = 0;\n        var length = aliases.length;\n        var aliasListBuf = _malloc((length + 1) * 4); // Use length + 1 so we have space for the terminating NULL ptr.\n  \n        for (var i = 0; i < length; i++, j += 4) {\n          var alias = aliases[i];\n          var aliasBuf = _malloc(alias.length + 1);\n          writeAsciiToMemory(alias, aliasBuf);\n          HEAP32[(((aliasListBuf)+(j))>>2)]=aliasBuf;\n        }\n        HEAP32[(((aliasListBuf)+(j))>>2)]=0; // Terminating NULL pointer.\n  \n        // generate protoent\n        var pe = _malloc(12);\n        HEAP32[((pe)>>2)]=nameBuf;\n        HEAP32[(((pe)+(4))>>2)]=aliasListBuf;\n        HEAP32[(((pe)+(8))>>2)]=proto;\n        return pe;\n      };\n  \n      // Populate the protocol 'database'. The entries are limited to tcp and udp, though it is fairly trivial\n      // to add extra entries from /etc/protocols if desired - though not sure if that'd actually be useful.\n      var list = Protocols.list;\n      var map  = Protocols.map;\n      if (list.length === 0) {\n          var entry = allocprotoent('tcp', 6, ['TCP']);\n          list.push(entry);\n          map['tcp'] = map['6'] = entry;\n          entry = allocprotoent('udp', 17, ['UDP']);\n          list.push(entry);\n          map['udp'] = map['17'] = entry;\n      }\n  \n      _setprotoent.index = 0;\n    }function _getprotobyname(name) {\n      // struct protoent *getprotobyname(const char *);\n      name = UTF8ToString(name);\n      _setprotoent(true);\n      var result = Protocols.map[name];\n      return result;\n    }\n\n  function _getprotobynumber(number) {\n      // struct protoent *getprotobynumber(int proto);\n      _setprotoent(true);\n      var result = Protocols.map[number];\n      return result;\n    }\n\n  function _getpwnam() { throw 'getpwnam: TODO' }\n\n  function _getpwuid() { throw 'getpwuid: TODO' }\n\n  function _gettimeofday(ptr) {\n      var now = Date.now();\n      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds\n      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds\n      return 0;\n    }\n\n  \n  var ___tm_timezone=(stringToUTF8(\"GMT\", 2285120, 4), 2285120);function _gmtime_r(time, tmPtr) {\n      var date = new Date(HEAP32[((time)>>2)]*1000);\n      HEAP32[((tmPtr)>>2)]=date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)]=date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)]=date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)]=date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)]=date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)]=date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)]=date.getUTCDay();\n      HEAP32[(((tmPtr)+(36))>>2)]=0;\n      HEAP32[(((tmPtr)+(32))>>2)]=0;\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)]=yday;\n      HEAP32[(((tmPtr)+(40))>>2)]=___tm_timezone;\n  \n      return tmPtr;\n    }\n\n  function _kill(pid, sig) {\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/kill.html\n      // Makes no sense in a single-process environment.\n  \t  // Should kill itself somtimes depending on `pid`\n      setErrNo(ERRNO_CODES.EPERM);\n      return -1;\n    }\n\n   \n\n   \n\n  function _llvm_bswap_i64(l, h) {\n      var retl = _llvm_bswap_i32(h)>>>0;\n      var reth = _llvm_bswap_i32(l)>>>0;\n      return ((setTempRet0(reth),retl)|0);\n    }\n\n  \n  function _llvm_log10_f32(x) {\n      return Math.log(x) / Math.LN10; // TODO: Math.log10, when browser support is there\n    }function _llvm_log10_f64(a0\n  ) {\n  return _llvm_log10_f32(a0);\n  }\n\n  function _llvm_stackrestore(p) {\n      var self = _llvm_stacksave;\n      var ret = self.LLVM_SAVEDSTACKS[p];\n      self.LLVM_SAVEDSTACKS.splice(p, 1);\n      stackRestore(ret);\n    }\n\n  function _llvm_stacksave() {\n      var self = _llvm_stacksave;\n      if (!self.LLVM_SAVEDSTACKS) {\n        self.LLVM_SAVEDSTACKS = [];\n      }\n      self.LLVM_SAVEDSTACKS.push(stackSave());\n      return self.LLVM_SAVEDSTACKS.length-1;\n    }\n\n  function _localtime_r(time, tmPtr) {\n      _tzset();\n      var date = new Date(HEAP32[((time)>>2)]*1000);\n      HEAP32[((tmPtr)>>2)]=date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();\n  \n      var start = new Date(date.getFullYear(), 0, 1);\n      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)]=yday;\n      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)]=dst;\n  \n      var zonePtr = HEAP32[(((__get_tzname())+(dst ? 4 : 0))>>2)];\n      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;\n  \n      return tmPtr;\n    }\n\n  \n   function _longjmp(env, value) {\n      _setThrew(env, value || 1);\n      throw 'longjmp';\n    }\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    } \n\n   \n\n\n\n  \n  function _usleep(useconds) {\n      // int usleep(useconds_t useconds);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/usleep.html\n      // We're single-threaded, so use a busy loop. Super-ugly.\n      var start = _emscripten_get_now();\n      while (_emscripten_get_now() - start < useconds / 1000) {\n        // Do nothing.\n      }\n    }\n  Module[\"_usleep\"] = _usleep;function _nanosleep(rqtp, rmtp) {\n      // int nanosleep(const struct timespec  *rqtp, struct timespec *rmtp);\n      if (rqtp === 0) {\n        setErrNo(28);\n        return -1;\n      }\n      var seconds = HEAP32[((rqtp)>>2)];\n      var nanoseconds = HEAP32[(((rqtp)+(4))>>2)];\n      if (nanoseconds < 0 || nanoseconds > 999999999 || seconds < 0) {\n        setErrNo(28);\n        return -1;\n      }\n      if (rmtp !== 0) {\n        HEAP32[((rmtp)>>2)]=0;\n        HEAP32[(((rmtp)+(4))>>2)]=0;\n      }\n      return _usleep((seconds * 1e6) + (nanoseconds / 1000));\n    }\n\n  /** @type {function(...*):?} */\n  function _popen(\n  ) {\n  err('missing function: popen'); abort(-1);\n  }\n\n  function _pthread_create() {\n      return 6;\n    }\n\n  function _pthread_join() {}\n\n  function _pthread_mutexattr_destroy() {}\n\n  function _pthread_mutexattr_init() {}\n\n  function _pthread_mutexattr_settype() {}\n\n  function _pthread_setcancelstate() { return 0; }\n\n  function _putenv(string) {\n      // int putenv(char *string);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html\n      // WARNING: According to the standard (and the glibc implementation), the\n      //          string is taken by reference so future changes are reflected.\n      //          We copy it instead, possibly breaking some uses.\n      if (string === 0) {\n        setErrNo(28);\n        return -1;\n      }\n      string = UTF8ToString(string);\n      var splitPoint = string.indexOf('=')\n      if (string === '' || string.indexOf('=') === -1) {\n        setErrNo(28);\n        return -1;\n      }\n      var name = string.slice(0, splitPoint);\n      var value = string.slice(splitPoint + 1);\n      if (!(name in ENV) || ENV[name] !== value) {\n        ENV[name] = value;\n        ___buildEnvironment(__get_environ());\n      }\n      return 0;\n    }\n\n  function _setTempRet0($i) {\n      setTempRet0(($i) | 0);\n    }\n\n  function _setitimer() {\n      throw 'setitimer() is not implemented yet';\n    }\n\n  function _sigaction(signum, act, oldact) {\n      //int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);\n      return 0;\n    }\n\n  function _sigaddset(set, signum) {\n      HEAP32[((set)>>2)]=HEAP32[((set)>>2)]| (1 << (signum-1));\n      return 0;\n    }\n\n  function _sigdelset(set, signum) {\n      HEAP32[((set)>>2)]=HEAP32[((set)>>2)]& (~(1 << (signum-1)));\n      return 0;\n    }\n\n  function _sigemptyset(set) {\n      HEAP32[((set)>>2)]=0;\n      return 0;\n    }\n\n  function _sigfillset(set) {\n      HEAP32[((set)>>2)]=-1>>>0;\n      return 0;\n    }\n\n  \n  var __sigalrm_handler=0;function _signal(sig, func) {\n      if (sig == 14 /*SIGALRM*/) {\n        __sigalrm_handler = func;\n      } else {\n      }\n      return 0;\n    }\n\n  function _sigprocmask() {\n      return 0;\n    }\n\n  \n  function __isLeapYear(year) {\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n    }\n  \n  function __arraySum(array, index) {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {\n        // no-op\n      }\n      return sum;\n    }\n  \n  \n  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];\n  \n  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {\n      var newDate = new Date(date.getTime());\n      while(days > 0) {\n        var leap = __isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n  \n        if (days > daysInCurrentMonth-newDate.getDate()) {\n          // we spill over to next month\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth+1)\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear()+1);\n          }\n        } else {\n          // we stay in current month\n          newDate.setDate(newDate.getDate()+days);\n          return newDate;\n        }\n      }\n  \n      return newDate;\n    }function _strftime(s, maxsize, format, tm) {\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n  \n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\n  \n      var date = {\n        tm_sec: HEAP32[((tm)>>2)],\n        tm_min: HEAP32[(((tm)+(4))>>2)],\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\n        tm_year: HEAP32[(((tm)+(20))>>2)],\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\n      };\n  \n      var pattern = UTF8ToString(format);\n  \n      // expand format\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\n        '%h': '%b',                       // Equivalent to %b\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\n        '%T': '%H:%M:%S',                 // Replaced by the time\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\n        // Modified Conversion Specifiers\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n  \n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n      function leadingSomething(value, digits, character) {\n        var str = typeof value === 'number' ? value.toString() : (value || '');\n        while (str.length < digits) {\n          str = character[0]+str;\n        }\n        return str;\n      }\n  \n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n  \n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\n        }\n  \n        var compare;\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate()-date2.getDate());\n          }\n        }\n        return compare;\n      }\n  \n      function getFirstWeekStartDate(janFourth) {\n          switch (janFourth.getDay()) {\n            case 0: // Sunday\n              return new Date(janFourth.getFullYear()-1, 11, 29);\n            case 1: // Monday\n              return janFourth;\n            case 2: // Tuesday\n              return new Date(janFourth.getFullYear(), 0, 3);\n            case 3: // Wednesday\n              return new Date(janFourth.getFullYear(), 0, 2);\n            case 4: // Thursday\n              return new Date(janFourth.getFullYear(), 0, 1);\n            case 5: // Friday\n              return new Date(janFourth.getFullYear()-1, 11, 31);\n            case 6: // Saturday\n              return new Date(janFourth.getFullYear()-1, 11, 30);\n          }\n      }\n  \n      function getWeekBasedYear(date) {\n          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n            // this date is after the start of the first week of this year\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n              return thisDate.getFullYear()+1;\n            } else {\n              return thisDate.getFullYear();\n            }\n          } else {\n            return thisDate.getFullYear()-1;\n          }\n      }\n  \n      var EXPANSION_RULES_2 = {\n        '%a': function(date) {\n          return WEEKDAYS[date.tm_wday].substring(0,3);\n        },\n        '%A': function(date) {\n          return WEEKDAYS[date.tm_wday];\n        },\n        '%b': function(date) {\n          return MONTHS[date.tm_mon].substring(0,3);\n        },\n        '%B': function(date) {\n          return MONTHS[date.tm_mon];\n        },\n        '%C': function(date) {\n          var year = date.tm_year+1900;\n          return leadingNulls((year/100)|0,2);\n        },\n        '%d': function(date) {\n          return leadingNulls(date.tm_mday, 2);\n        },\n        '%e': function(date) {\n          return leadingSomething(date.tm_mday, 2, ' ');\n        },\n        '%g': function(date) {\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n          // January 4th, which is also the week that includes the first Thursday of the year, and\n          // is also the first week that contains at least four days in the year.\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n  \n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        '%G': function(date) {\n          return getWeekBasedYear(date);\n        },\n        '%H': function(date) {\n          return leadingNulls(date.tm_hour, 2);\n        },\n        '%I': function(date) {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': function(date) {\n          // Day of the year (001-366)\n          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\n        },\n        '%m': function(date) {\n          return leadingNulls(date.tm_mon+1, 2);\n        },\n        '%M': function(date) {\n          return leadingNulls(date.tm_min, 2);\n        },\n        '%n': function() {\n          return '\\n';\n        },\n        '%p': function(date) {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          } else {\n            return 'PM';\n          }\n        },\n        '%S': function(date) {\n          return leadingNulls(date.tm_sec, 2);\n        },\n        '%t': function() {\n          return '\\t';\n        },\n        '%u': function(date) {\n          return date.tm_wday || 7;\n        },\n        '%U': function(date) {\n          // Replaced by the week number of the year as a decimal number [00,53].\n          // The first Sunday of January is the first day of week 1;\n          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]\n          var janFirst = new Date(date.tm_year+1900, 0, 1);\n          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());\n          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);\n  \n          // is target date after the first Sunday?\n          if (compareByDay(firstSunday, endDate) < 0) {\n            // calculate difference in days between first Sunday and endDate\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;\n            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();\n            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();\n            return leadingNulls(Math.ceil(days/7), 2);\n          }\n  \n          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';\n        },\n        '%V': function(date) {\n          // Replaced by the week number of the year (Monday as the first day of the week)\n          // as a decimal number [01,53]. If the week containing 1 January has four\n          // or more days in the new year, then it is considered week 1.\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);\n          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n            // if given date is before this years first week, then it belongs to the 53rd week of last year\n            return '53';\n          }\n  \n          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n            // if given date is after next years first week, then it belongs to the 01th week of next year\n            return '01';\n          }\n  \n          // given date is in between CW 01..53 of this calendar year\n          var daysDifference;\n          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {\n            // first CW of this year starts last year\n            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()\n          } else {\n            // first CW of this year starts this year\n            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();\n          }\n          return leadingNulls(Math.ceil(daysDifference/7), 2);\n        },\n        '%w': function(date) {\n          return date.tm_wday;\n        },\n        '%W': function(date) {\n          // Replaced by the week number of the year as a decimal number [00,53].\n          // The first Monday of January is the first day of week 1;\n          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]\n          var janFirst = new Date(date.tm_year, 0, 1);\n          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);\n          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);\n  \n          // is target date after the first Monday?\n          if (compareByDay(firstMonday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;\n            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();\n            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();\n            return leadingNulls(Math.ceil(days/7), 2);\n          }\n          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';\n        },\n        '%y': function(date) {\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n          return (date.tm_year+1900).toString().substring(2);\n        },\n        '%Y': function(date) {\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n          return date.tm_year+1900;\n        },\n        '%z': function(date) {\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n          off = (off / 60)*100 + (off % 60);\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\n        },\n        '%Z': function(date) {\n          return date.tm_zone;\n        },\n        '%%': function() {\n          return '%';\n        }\n      };\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.indexOf(rule) >= 0) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n  \n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n  \n      writeArrayToMemory(bytes, s);\n      return bytes.length-1;\n    }\n\n  function _strptime(buf, format, tm) {\n      // char *strptime(const char *restrict buf, const char *restrict format, struct tm *restrict tm);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strptime.html\n      var pattern = UTF8ToString(format);\n  \n      // escape special characters\n      // TODO: not sure we really need to escape all of these in JS regexps\n      var SPECIAL_CHARS = '\\\\!@#$^&*()+=-[]/{}|:<>?,.';\n      for (var i=0, ii=SPECIAL_CHARS.length; i<ii; ++i) {\n        pattern = pattern.replace(new RegExp('\\\\'+SPECIAL_CHARS[i], 'g'), '\\\\'+SPECIAL_CHARS[i]);\n      }\n  \n      // reduce number of matchers\n      var EQUIVALENT_MATCHERS = {\n        '%A':  '%a',\n        '%B':  '%b',\n        '%c':  '%a %b %d %H:%M:%S %Y',\n        '%D':  '%m\\\\/%d\\\\/%y',\n        '%e':  '%d',\n        '%F':  '%Y-%m-%d',\n        '%h':  '%b',\n        '%R':  '%H\\\\:%M',\n        '%r':  '%I\\\\:%M\\\\:%S\\\\s%p',\n        '%T':  '%H\\\\:%M\\\\:%S',\n        '%x':  '%m\\\\/%d\\\\/(?:%y|%Y)',\n        '%X':  '%H\\\\:%M\\\\:%S'\n      };\n      for (var matcher in EQUIVALENT_MATCHERS) {\n        pattern = pattern.replace(matcher, EQUIVALENT_MATCHERS[matcher]);\n      }\n  \n      // TODO: take care of locale\n  \n      var DATE_PATTERNS = {\n        /* weeday name */     '%a': '(?:Sun(?:day)?)|(?:Mon(?:day)?)|(?:Tue(?:sday)?)|(?:Wed(?:nesday)?)|(?:Thu(?:rsday)?)|(?:Fri(?:day)?)|(?:Sat(?:urday)?)',\n        /* month name */      '%b': '(?:Jan(?:uary)?)|(?:Feb(?:ruary)?)|(?:Mar(?:ch)?)|(?:Apr(?:il)?)|May|(?:Jun(?:e)?)|(?:Jul(?:y)?)|(?:Aug(?:ust)?)|(?:Sep(?:tember)?)|(?:Oct(?:ober)?)|(?:Nov(?:ember)?)|(?:Dec(?:ember)?)',\n        /* century */         '%C': '\\\\d\\\\d',\n        /* day of month */    '%d': '0[1-9]|[1-9](?!\\\\d)|1\\\\d|2\\\\d|30|31',\n        /* hour (24hr) */     '%H': '\\\\d(?!\\\\d)|[0,1]\\\\d|20|21|22|23',\n        /* hour (12hr) */     '%I': '\\\\d(?!\\\\d)|0\\\\d|10|11|12',\n        /* day of year */     '%j': '00[1-9]|0?[1-9](?!\\\\d)|0?[1-9]\\\\d(?!\\\\d)|[1,2]\\\\d\\\\d|3[0-6]\\\\d',\n        /* month */           '%m': '0[1-9]|[1-9](?!\\\\d)|10|11|12',\n        /* minutes */         '%M': '0\\\\d|\\\\d(?!\\\\d)|[1-5]\\\\d',\n        /* whitespace */      '%n': '\\\\s',\n        /* AM/PM */           '%p': 'AM|am|PM|pm|A\\\\.M\\\\.|a\\\\.m\\\\.|P\\\\.M\\\\.|p\\\\.m\\\\.',\n        /* seconds */         '%S': '0\\\\d|\\\\d(?!\\\\d)|[1-5]\\\\d|60',\n        /* week number */     '%U': '0\\\\d|\\\\d(?!\\\\d)|[1-4]\\\\d|50|51|52|53',\n        /* week number */     '%W': '0\\\\d|\\\\d(?!\\\\d)|[1-4]\\\\d|50|51|52|53',\n        /* weekday number */  '%w': '[0-6]',\n        /* 2-digit year */    '%y': '\\\\d\\\\d',\n        /* 4-digit year */    '%Y': '\\\\d\\\\d\\\\d\\\\d',\n        /* % */               '%%': '%',\n        /* whitespace */      '%t': '\\\\s',\n      };\n  \n      var MONTH_NUMBERS = {JAN: 0, FEB: 1, MAR: 2, APR: 3, MAY: 4, JUN: 5, JUL: 6, AUG: 7, SEP: 8, OCT: 9, NOV: 10, DEC: 11};\n      var DAY_NUMBERS_SUN_FIRST = {SUN: 0, MON: 1, TUE: 2, WED: 3, THU: 4, FRI: 5, SAT: 6};\n      var DAY_NUMBERS_MON_FIRST = {MON: 0, TUE: 1, WED: 2, THU: 3, FRI: 4, SAT: 5, SUN: 6};\n  \n      for (var datePattern in DATE_PATTERNS) {\n        pattern = pattern.replace(datePattern, '('+datePattern+DATE_PATTERNS[datePattern]+')');\n      }\n  \n      // take care of capturing groups\n      var capture = [];\n      for (var i=pattern.indexOf('%'); i>=0; i=pattern.indexOf('%')) {\n        capture.push(pattern[i+1]);\n        pattern = pattern.replace(new RegExp('\\\\%'+pattern[i+1], 'g'), '');\n      }\n  \n      var matches = new RegExp('^'+pattern, \"i\").exec(UTF8ToString(buf))\n      // out(UTF8ToString(buf)+ ' is matched by '+((new RegExp('^'+pattern)).source)+' into: '+JSON.stringify(matches));\n  \n      function initDate() {\n        function fixup(value, min, max) {\n          return (typeof value !== 'number' || isNaN(value)) ? min : (value>=min ? (value<=max ? value: max): min);\n        };\n        return {\n          year: fixup(HEAP32[(((tm)+(20))>>2)] + 1900 , 1970, 9999),\n          month: fixup(HEAP32[(((tm)+(16))>>2)], 0, 11),\n          day: fixup(HEAP32[(((tm)+(12))>>2)], 1, 31),\n          hour: fixup(HEAP32[(((tm)+(8))>>2)], 0, 23),\n          min: fixup(HEAP32[(((tm)+(4))>>2)], 0, 59),\n          sec: fixup(HEAP32[((tm)>>2)], 0, 59)\n        };\n      };\n  \n      if (matches) {\n        var date = initDate();\n        var value;\n  \n        var getMatch = function(symbol) {\n          var pos = capture.indexOf(symbol);\n          // check if symbol appears in regexp\n          if (pos >= 0) {\n            // return matched value or null (falsy!) for non-matches\n            return matches[pos+1];\n          }\n          return;\n        };\n  \n        // seconds\n        if ((value=getMatch('S'))) {\n          date.sec = jstoi_q(value);\n        }\n  \n        // minutes\n        if ((value=getMatch('M'))) {\n          date.min = jstoi_q(value);\n        }\n  \n        // hours\n        if ((value=getMatch('H'))) {\n          // 24h clock\n          date.hour = jstoi_q(value);\n        } else if ((value = getMatch('I'))) {\n          // AM/PM clock\n          var hour = jstoi_q(value);\n          if ((value=getMatch('p'))) {\n            hour += value.toUpperCase()[0] === 'P' ? 12 : 0;\n          }\n          date.hour = hour;\n        }\n  \n        // year\n        if ((value=getMatch('Y'))) {\n          // parse from four-digit year\n          date.year = jstoi_q(value);\n        } else if ((value=getMatch('y'))) {\n          // parse from two-digit year...\n          var year = jstoi_q(value);\n          if ((value=getMatch('C'))) {\n            // ...and century\n            year += jstoi_q(value)*100;\n          } else {\n            // ...and rule-of-thumb\n            year += year<69 ? 2000 : 1900;\n          }\n          date.year = year;\n        }\n  \n        // month\n        if ((value=getMatch('m'))) {\n          // parse from month number\n          date.month = jstoi_q(value)-1;\n        } else if ((value=getMatch('b'))) {\n          // parse from month name\n          date.month = MONTH_NUMBERS[value.substring(0,3).toUpperCase()] || 0;\n          // TODO: derive month from day in year+year, week number+day of week+year\n        }\n  \n        // day\n        if ((value=getMatch('d'))) {\n          // get day of month directly\n          date.day = jstoi_q(value);\n        } else if ((value=getMatch('j'))) {\n          // get day of month from day of year ...\n          var day = jstoi_q(value);\n          var leapYear = __isLeapYear(date.year);\n          for (var month=0; month<12; ++month) {\n            var daysUntilMonth = __arraySum(leapYear ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, month-1);\n            if (day<=daysUntilMonth+(leapYear ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[month]) {\n              date.day = day-daysUntilMonth;\n            }\n          }\n        } else if ((value=getMatch('a'))) {\n          // get day of month from weekday ...\n          var weekDay = value.substring(0,3).toUpperCase();\n          if ((value=getMatch('U'))) {\n            // ... and week number (Sunday being first day of week)\n            // Week number of the year (Sunday as the first day of the week) as a decimal number [00,53].\n            // All days in a new year preceding the first Sunday are considered to be in week 0.\n            var weekDayNumber = DAY_NUMBERS_SUN_FIRST[weekDay];\n            var weekNumber = jstoi_q(value);\n  \n            // January 1st\n            var janFirst = new Date(date.year, 0, 1);\n            var endDate;\n            if (janFirst.getDay() === 0) {\n              // Jan 1st is a Sunday, and, hence in the 1st CW\n              endDate = __addDays(janFirst, weekDayNumber+7*(weekNumber-1));\n            } else {\n              // Jan 1st is not a Sunday, and, hence still in the 0th CW\n              endDate = __addDays(janFirst, 7-janFirst.getDay()+weekDayNumber+7*(weekNumber-1));\n            }\n            date.day = endDate.getDate();\n            date.month = endDate.getMonth();\n          } else if ((value=getMatch('W'))) {\n            // ... and week number (Monday being first day of week)\n            // Week number of the year (Monday as the first day of the week) as a decimal number [00,53].\n            // All days in a new year preceding the first Monday are considered to be in week 0.\n            var weekDayNumber = DAY_NUMBERS_MON_FIRST[weekDay];\n            var weekNumber = jstoi_q(value);\n  \n            // January 1st\n            var janFirst = new Date(date.year, 0, 1);\n            var endDate;\n            if (janFirst.getDay()===1) {\n              // Jan 1st is a Monday, and, hence in the 1st CW\n               endDate = __addDays(janFirst, weekDayNumber+7*(weekNumber-1));\n            } else {\n              // Jan 1st is not a Monday, and, hence still in the 0th CW\n              endDate = __addDays(janFirst, 7-janFirst.getDay()+1+weekDayNumber+7*(weekNumber-1));\n            }\n  \n            date.day = endDate.getDate();\n            date.month = endDate.getMonth();\n          }\n        }\n  \n        /*\n        tm_sec  int seconds after the minute  0-61*\n        tm_min  int minutes after the hour  0-59\n        tm_hour int hours since midnight  0-23\n        tm_mday int day of the month  1-31\n        tm_mon  int months since January  0-11\n        tm_year int years since 1900\n        tm_wday int days since Sunday 0-6\n        tm_yday int days since January 1  0-365\n        tm_isdst  int Daylight Saving Time flag\n        */\n  \n        var fullDate = new Date(date.year, date.month, date.day, date.hour, date.min, date.sec, 0);\n        HEAP32[((tm)>>2)]=fullDate.getSeconds();\n        HEAP32[(((tm)+(4))>>2)]=fullDate.getMinutes();\n        HEAP32[(((tm)+(8))>>2)]=fullDate.getHours();\n        HEAP32[(((tm)+(12))>>2)]=fullDate.getDate();\n        HEAP32[(((tm)+(16))>>2)]=fullDate.getMonth();\n        HEAP32[(((tm)+(20))>>2)]=fullDate.getFullYear()-1900;\n        HEAP32[(((tm)+(24))>>2)]=fullDate.getDay();\n        HEAP32[(((tm)+(28))>>2)]=__arraySum(__isLeapYear(fullDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, fullDate.getMonth()-1)+fullDate.getDate()-1;\n        HEAP32[(((tm)+(32))>>2)]=0;\n  \n        // we need to convert the matched sequence into an integer array to take care of UTF-8 characters > 0x7F\n        // TODO: not sure that intArrayFromString handles all unicode characters correctly\n        return buf+intArrayFromString(matches[0]).length-1;\n      }\n  \n      return 0;\n    }\n\n  function _sysconf(name) {\n      // long sysconf(int name);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html\n      switch(name) {\n        case 30: return 16384;\n        case 85:\n          var maxHeapSize = HEAPU8.length;\n          return maxHeapSize / 16384;\n        case 132:\n        case 133:\n        case 12:\n        case 137:\n        case 138:\n        case 15:\n        case 235:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 149:\n        case 13:\n        case 10:\n        case 236:\n        case 153:\n        case 9:\n        case 21:\n        case 22:\n        case 159:\n        case 154:\n        case 14:\n        case 77:\n        case 78:\n        case 139:\n        case 80:\n        case 81:\n        case 82:\n        case 68:\n        case 67:\n        case 164:\n        case 11:\n        case 29:\n        case 47:\n        case 48:\n        case 95:\n        case 52:\n        case 51:\n        case 46:\n        case 79:\n          return 200809;\n        case 27:\n        case 246:\n        case 127:\n        case 128:\n        case 23:\n        case 24:\n        case 160:\n        case 161:\n        case 181:\n        case 182:\n        case 242:\n        case 183:\n        case 184:\n        case 243:\n        case 244:\n        case 245:\n        case 165:\n        case 178:\n        case 179:\n        case 49:\n        case 50:\n        case 168:\n        case 169:\n        case 175:\n        case 170:\n        case 171:\n        case 172:\n        case 97:\n        case 76:\n        case 32:\n        case 173:\n        case 35:\n          return -1;\n        case 176:\n        case 177:\n        case 7:\n        case 155:\n        case 8:\n        case 157:\n        case 125:\n        case 126:\n        case 92:\n        case 93:\n        case 129:\n        case 130:\n        case 131:\n        case 94:\n        case 91:\n          return 1;\n        case 74:\n        case 60:\n        case 69:\n        case 70:\n        case 4:\n          return 1024;\n        case 31:\n        case 42:\n        case 72:\n          return 32;\n        case 87:\n        case 26:\n        case 33:\n          return 2147483647;\n        case 34:\n        case 1:\n          return 47839;\n        case 38:\n        case 36:\n          return 99;\n        case 43:\n        case 37:\n          return 2048;\n        case 0: return 2097152;\n        case 3: return 65536;\n        case 28: return 32768;\n        case 44: return 32767;\n        case 75: return 16384;\n        case 39: return 1000;\n        case 89: return 700;\n        case 71: return 256;\n        case 40: return 255;\n        case 2: return 100;\n        case 180: return 64;\n        case 25: return 20;\n        case 5: return 16;\n        case 6: return 6;\n        case 73: return 4;\n        case 84: {\n          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;\n          return 1;\n        }\n      }\n      setErrNo(28);\n      return -1;\n    }\n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\n\n\n  function _unsetenv(name) {\n      // int unsetenv(const char *name);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/unsetenv.html\n      if (name === 0) {\n        setErrNo(28);\n        return -1;\n      }\n      name = UTF8ToString(name);\n      if (name === '' || name.indexOf('=') !== -1) {\n        setErrNo(28);\n        return -1;\n      }\n      if (ENV.hasOwnProperty(name)) {\n        delete ENV[name];\n        ___buildEnvironment(__get_environ());\n      }\n      return 0;\n    }\n\n\n  function _utime(path, times) {\n      // int utime(const char *path, const struct utimbuf *times);\n      // http://pubs.opengroup.org/onlinepubs/009695399/basedefs/utime.h.html\n      var time;\n      if (times) {\n        // NOTE: We don't keep track of access timestamps.\n        var offset = 4;\n        time = HEAP32[(((times)+(offset))>>2)];\n        time *= 1000;\n      } else {\n        time = Date.now();\n      }\n      path = UTF8ToString(path);\n      try {\n        FS.utime(path, time, time);\n        return 0;\n      } catch (e) {\n        FS.handleFSError(e);\n        return -1;\n      }\n    }\n\n  \n  function _wait(stat_loc) {\n      // pid_t wait(int *stat_loc);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/wait.html\n      // Makes no sense in a single-process environment.\n      setErrNo(12);\n      return -1;\n    }function _waitpid(a0\n  ) {\n  return _wait(a0);\n  }\n\n  \n  var __readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr, buf) {\n      __readAsmConstArgsArray.length = 0;\n      var ch;\n      buf >>= 2; // Align buf up front to index Int32Array (HEAP32)\n      while (ch = HEAPU8[sigPtr++]) {\n        __readAsmConstArgsArray.push(ch < 105 ? HEAPF64[++buf >> 1] : HEAP32[buf]);\n        ++buf;\n      }\n      return __readAsmConstArgsArray;\n    }\n\nvar FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n    if (!parent) {\n      parent = this;  // root node sets parent to itself\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n  };\n  var readMode = 292/*292*/ | 73/*73*/;\n  var writeMode = 146/*146*/;\n  Object.defineProperties(FSNode.prototype, {\n   read: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & readMode) === readMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= readMode : this.mode &= ~readMode;\n    }\n   },\n   write: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & writeMode) === writeMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\n    }\n   },\n   isFolder: {\n    get: /** @this{FSNode} */function() {\n     return FS.isDir(this.mode);\n    }\n   },\n   isDevice: {\n    get: /** @this{FSNode} */function() {\n     return FS.isChrdev(this.mode);\n    }\n   }\n  });\n  FS.FSNode = FSNode;\n  FS.staticInit();Module[\"FS_createFolder\"] = FS.createFolder;Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createLink\"] = FS.createLink;Module[\"FS_createDevice\"] = FS.createDevice;Module[\"FS_unlink\"] = FS.unlink;;\nvar ASSERTIONS = false;\n\n\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\n\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    dynCall_v(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viidii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viidii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nvar asmGlobalArg = {};\n\nvar asmLibraryArg = { \"___assert_fail\": ___assert_fail, \"___buildEnvironment\": ___buildEnvironment, \"___clock_gettime\": ___clock_gettime, \"___map_file\": ___map_file, \"___sys__newselect\": ___sys__newselect, \"___sys_access\": ___sys_access, \"___sys_chdir\": ___sys_chdir, \"___sys_chmod\": ___sys_chmod, \"___sys_chown32\": ___sys_chown32, \"___sys_dup\": ___sys_dup, \"___sys_dup2\": ___sys_dup2, \"___sys_fchmod\": ___sys_fchmod, \"___sys_fchown32\": ___sys_fchown32, \"___sys_fcntl64\": ___sys_fcntl64, \"___sys_fstat64\": ___sys_fstat64, \"___sys_ftruncate64\": ___sys_ftruncate64, \"___sys_getcwd\": ___sys_getcwd, \"___sys_getdents64\": ___sys_getdents64, \"___sys_getegid32\": ___sys_getegid32, \"___sys_geteuid32\": ___sys_geteuid32, \"___sys_getgid32\": ___sys_getgid32, \"___sys_getgroups32\": ___sys_getgroups32, \"___sys_getpid\": ___sys_getpid, \"___sys_getrusage\": ___sys_getrusage, \"___sys_getuid32\": ___sys_getuid32, \"___sys_ioctl\": ___sys_ioctl, \"___sys_lchown32\": ___sys_lchown32, \"___sys_link\": ___sys_link, \"___sys_lstat64\": ___sys_lstat64, \"___sys_madvise1\": ___sys_madvise1, \"___sys_mkdir\": ___sys_mkdir, \"___sys_mmap2\": ___sys_mmap2, \"___sys_mremap\": ___sys_mremap, \"___sys_munmap\": ___sys_munmap, \"___sys_nice\": ___sys_nice, \"___sys_open\": ___sys_open, \"___sys_pipe\": ___sys_pipe, \"___sys_poll\": ___sys_poll, \"___sys_read\": ___sys_read, \"___sys_readlink\": ___sys_readlink, \"___sys_rename\": ___sys_rename, \"___sys_rmdir\": ___sys_rmdir, \"___sys_socketcall\": ___sys_socketcall, \"___sys_stat64\": ___sys_stat64, \"___sys_statfs64\": ___sys_statfs64, \"___sys_symlink\": ___sys_symlink, \"___sys_umask\": ___sys_umask, \"___sys_uname\": ___sys_uname, \"___sys_unlink\": ___sys_unlink, \"___sys_wait4\": ___sys_wait4, \"___syscall10\": ___syscall10, \"___syscall102\": ___syscall102, \"___syscall114\": ___syscall114, \"___syscall12\": ___syscall12, \"___syscall122\": ___syscall122, \"___syscall142\": ___syscall142, \"___syscall15\": ___syscall15, \"___syscall163\": ___syscall163, \"___syscall168\": ___syscall168, \"___syscall183\": ___syscall183, \"___syscall192\": ___syscall192, \"___syscall194\": ___syscall194, \"___syscall195\": ___syscall195, \"___syscall196\": ___syscall196, \"___syscall197\": ___syscall197, \"___syscall198\": ___syscall198, \"___syscall199\": ___syscall199, \"___syscall20\": ___syscall20, \"___syscall200\": ___syscall200, \"___syscall201\": ___syscall201, \"___syscall205\": ___syscall205, \"___syscall207\": ___syscall207, \"___syscall212\": ___syscall212, \"___syscall219\": ___syscall219, \"___syscall220\": ___syscall220, \"___syscall221\": ___syscall221, \"___syscall268\": ___syscall268, \"___syscall3\": ___syscall3, \"___syscall33\": ___syscall33, \"___syscall34\": ___syscall34, \"___syscall38\": ___syscall38, \"___syscall39\": ___syscall39, \"___syscall40\": ___syscall40, \"___syscall41\": ___syscall41, \"___syscall42\": ___syscall42, \"___syscall5\": ___syscall5, \"___syscall54\": ___syscall54, \"___syscall60\": ___syscall60, \"___syscall63\": ___syscall63, \"___syscall77\": ___syscall77, \"___syscall83\": ___syscall83, \"___syscall85\": ___syscall85, \"___syscall9\": ___syscall9, \"___syscall91\": ___syscall91, \"___syscall94\": ___syscall94, \"___wasi_fd_close\": ___wasi_fd_close, \"___wasi_fd_fdstat_get\": ___wasi_fd_fdstat_get, \"___wasi_fd_read\": ___wasi_fd_read, \"___wasi_fd_seek\": ___wasi_fd_seek, \"___wasi_fd_sync\": ___wasi_fd_sync, \"___wasi_fd_write\": ___wasi_fd_write, \"__addDays\": __addDays, \"__arraySum\": __arraySum, \"__exit\": __exit, \"__getExecutableName\": __getExecutableName, \"__inet_ntop4_raw\": __inet_ntop4_raw, \"__inet_ntop6_raw\": __inet_ntop6_raw, \"__inet_pton4_raw\": __inet_pton4_raw, \"__inet_pton6_raw\": __inet_pton6_raw, \"__isLeapYear\": __isLeapYear, \"__memory_base\": 1024, \"__read_sockaddr\": __read_sockaddr, \"__table_base\": 0, \"__write_sockaddr\": __write_sockaddr, \"_abort\": _abort, \"_asctime_r\": _asctime_r, \"_chroot\": _chroot, \"_clock_gettime\": _clock_gettime, \"_difftime\": _difftime, \"_dlclose\": _dlclose, \"_dlerror\": _dlerror, \"_dlopen\": _dlopen, \"_dlsym\": _dlsym, \"_emscripten_asm_const_ii\": _emscripten_asm_const_ii, \"_emscripten_asm_const_iii\": _emscripten_asm_const_iii, \"_emscripten_asm_const_iiii\": _emscripten_asm_const_iiii, \"_emscripten_asm_const_int\": _emscripten_asm_const_int, \"_emscripten_get_heap_size\": _emscripten_get_heap_size, \"_emscripten_get_now\": _emscripten_get_now, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"_emscripten_resize_heap\": _emscripten_resize_heap, \"_execl\": _execl, \"_execle\": _execle, \"_execvp\": _execvp, \"_exit\": _exit, \"_fd_close\": _fd_close, \"_fd_fdstat_get\": _fd_fdstat_get, \"_fd_read\": _fd_read, \"_fd_seek\": _fd_seek, \"_fd_sync\": _fd_sync, \"_fd_write\": _fd_write, \"_flock\": _flock, \"_fork\": _fork, \"_getdtablesize\": _getdtablesize, \"_getenv\": _getenv, \"_getgrnam\": _getgrnam, \"_gethostbyaddr\": _gethostbyaddr, \"_gethostbyname\": _gethostbyname, \"_gethostbyname_r\": _gethostbyname_r, \"_getloadavg\": _getloadavg, \"_getprotobyname\": _getprotobyname, \"_getprotobynumber\": _getprotobynumber, \"_getpwnam\": _getpwnam, \"_getpwuid\": _getpwuid, \"_gettimeofday\": _gettimeofday, \"_gmtime_r\": _gmtime_r, \"_kill\": _kill, \"_llvm_bswap_i64\": _llvm_bswap_i64, \"_llvm_log10_f32\": _llvm_log10_f32, \"_llvm_log10_f64\": _llvm_log10_f64, \"_llvm_stackrestore\": _llvm_stackrestore, \"_llvm_stacksave\": _llvm_stacksave, \"_localtime_r\": _localtime_r, \"_longjmp\": _longjmp, \"_mktime\": _mktime, \"_nanosleep\": _nanosleep, \"_popen\": _popen, \"_pthread_create\": _pthread_create, \"_pthread_join\": _pthread_join, \"_pthread_mutexattr_destroy\": _pthread_mutexattr_destroy, \"_pthread_mutexattr_init\": _pthread_mutexattr_init, \"_pthread_mutexattr_settype\": _pthread_mutexattr_settype, \"_pthread_setcancelstate\": _pthread_setcancelstate, \"_putenv\": _putenv, \"_setTempRet0\": _setTempRet0, \"_setitimer\": _setitimer, \"_setprotoent\": _setprotoent, \"_sigaction\": _sigaction, \"_sigaddset\": _sigaddset, \"_sigdelset\": _sigdelset, \"_sigemptyset\": _sigemptyset, \"_sigfillset\": _sigfillset, \"_signal\": _signal, \"_sigprocmask\": _sigprocmask, \"_strftime\": _strftime, \"_strptime\": _strptime, \"_sysconf\": _sysconf, \"_time\": _time, \"_tzset\": _tzset, \"_unsetenv\": _unsetenv, \"_usleep\": _usleep, \"_utime\": _utime, \"_wait\": _wait, \"_waitpid\": _waitpid, \"abort\": abort, \"getTempRet0\": getTempRet0, \"invoke_i\": invoke_i, \"invoke_ii\": invoke_ii, \"invoke_iii\": invoke_iii, \"invoke_iiii\": invoke_iiii, \"invoke_iiiii\": invoke_iiiii, \"invoke_iiiiiii\": invoke_iiiiiii, \"invoke_v\": invoke_v, \"invoke_vi\": invoke_vi, \"invoke_vii\": invoke_vii, \"invoke_viidii\": invoke_viidii, \"invoke_viii\": invoke_viii, \"invoke_viiii\": invoke_viiii, \"invoke_viiiii\": invoke_viiiii, \"invoke_viiiiii\": invoke_viiiiii, \"memory\": wasmMemory, \"setTempRet0\": setTempRet0, \"table\": wasmTable, \"tempDoublePtr\": tempDoublePtr };\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\n/** @type {function(...*):?} */\nvar ___emscripten_environ_constructor = Module[\"___emscripten_environ_constructor\"] = function() {\n  return (___emscripten_environ_constructor = Module[\"___emscripten_environ_constructor\"] = Module[\"asm\"][\"___emscripten_environ_constructor\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___errno_location = Module[\"___errno_location\"] = function() {\n  return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"___errno_location\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar __get_daylight = Module[\"__get_daylight\"] = function() {\n  return (__get_daylight = Module[\"__get_daylight\"] = Module[\"asm\"][\"__get_daylight\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar __get_environ = Module[\"__get_environ\"] = function() {\n  return (__get_environ = Module[\"__get_environ\"] = Module[\"asm\"][\"__get_environ\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar __get_timezone = Module[\"__get_timezone\"] = function() {\n  return (__get_timezone = Module[\"__get_timezone\"] = Module[\"asm\"][\"__get_timezone\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar __get_tzname = Module[\"__get_tzname\"] = function() {\n  return (__get_tzname = Module[\"__get_tzname\"] = Module[\"asm\"][\"__get_tzname\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _del_callback = Module[\"_del_callback\"] = function() {\n  return (_del_callback = Module[\"_del_callback\"] = Module[\"asm\"][\"_del_callback\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_get_sbrk_ptr = Module[\"_emscripten_get_sbrk_ptr\"] = function() {\n  return (_emscripten_get_sbrk_ptr = Module[\"_emscripten_get_sbrk_ptr\"] = Module[\"asm\"][\"_emscripten_get_sbrk_ptr\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function() {\n  return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"_emscripten_main_thread_process_queued_calls\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _exec_callback = Module[\"_exec_callback\"] = function() {\n  return (_exec_callback = Module[\"_exec_callback\"] = Module[\"asm\"][\"_exec_callback\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _free = Module[\"_free\"] = function() {\n  return (_free = Module[\"_free\"] = Module[\"asm\"][\"_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _htonl = Module[\"_htonl\"] = function() {\n  return (_htonl = Module[\"_htonl\"] = Module[\"asm\"][\"_htonl\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _htons = Module[\"_htons\"] = function() {\n  return (_htons = Module[\"_htons\"] = Module[\"asm\"][\"_htons\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _llvm_bswap_i16 = Module[\"_llvm_bswap_i16\"] = function() {\n  return (_llvm_bswap_i16 = Module[\"_llvm_bswap_i16\"] = Module[\"asm\"][\"_llvm_bswap_i16\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() {\n  return (_llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = Module[\"asm\"][\"_llvm_bswap_i32\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _main = Module[\"_main\"] = function() {\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"_main\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _malloc = Module[\"_malloc\"] = function() {\n  return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"_malloc\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _memalign = Module[\"_memalign\"] = function() {\n  return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"_memalign\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _memcpy = Module[\"_memcpy\"] = function() {\n  return (_memcpy = Module[\"_memcpy\"] = Module[\"asm\"][\"_memcpy\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _memmove = Module[\"_memmove\"] = function() {\n  return (_memmove = Module[\"_memmove\"] = Module[\"asm\"][\"_memmove\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _memset = Module[\"_memset\"] = function() {\n  return (_memset = Module[\"_memset\"] = Module[\"asm\"][\"_memset\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _ntohs = Module[\"_ntohs\"] = function() {\n  return (_ntohs = Module[\"_ntohs\"] = Module[\"asm\"][\"_ntohs\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _php_embed_init = Module[\"_php_embed_init\"] = function() {\n  return (_php_embed_init = Module[\"_php_embed_init\"] = Module[\"asm\"][\"_php_embed_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _php_embed_shutdown = Module[\"_php_embed_shutdown\"] = function() {\n  return (_php_embed_shutdown = Module[\"_php_embed_shutdown\"] = Module[\"asm\"][\"_php_embed_shutdown\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _pib_destroy = Module[\"_pib_destroy\"] = function() {\n  return (_pib_destroy = Module[\"_pib_destroy\"] = Module[\"asm\"][\"_pib_destroy\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _pib_exec = Module[\"_pib_exec\"] = function() {\n  return (_pib_exec = Module[\"_pib_exec\"] = Module[\"asm\"][\"_pib_exec\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _pib_init = Module[\"_pib_init\"] = function() {\n  return (_pib_init = Module[\"_pib_init\"] = Module[\"asm\"][\"_pib_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _pib_refresh = Module[\"_pib_refresh\"] = function() {\n  return (_pib_refresh = Module[\"_pib_refresh\"] = Module[\"asm\"][\"_pib_refresh\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _pib_run = Module[\"_pib_run\"] = function() {\n  return (_pib_run = Module[\"_pib_run\"] = Module[\"asm\"][\"_pib_run\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _realloc = Module[\"_realloc\"] = function() {\n  return (_realloc = Module[\"_realloc\"] = Module[\"asm\"][\"_realloc\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _saveSetjmp = Module[\"_saveSetjmp\"] = function() {\n  return (_saveSetjmp = Module[\"_saveSetjmp\"] = Module[\"asm\"][\"_saveSetjmp\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _setThrew = Module[\"_setThrew\"] = function() {\n  return (_setThrew = Module[\"_setThrew\"] = Module[\"asm\"][\"_setThrew\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _testSetjmp = Module[\"_testSetjmp\"] = function() {\n  return (_testSetjmp = Module[\"_testSetjmp\"] = Module[\"asm\"][\"_testSetjmp\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _zend_eval_string = Module[\"_zend_eval_string\"] = function() {\n  return (_zend_eval_string = Module[\"_zend_eval_string\"] = Module[\"asm\"][\"_zend_eval_string\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = Module[\"stackSave\"] = function() {\n  return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_d = Module[\"dynCall_d\"] = function() {\n  return (dynCall_d = Module[\"dynCall_d\"] = Module[\"asm\"][\"dynCall_d\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_di = Module[\"dynCall_di\"] = function() {\n  return (dynCall_di = Module[\"dynCall_di\"] = Module[\"asm\"][\"dynCall_di\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_dii = Module[\"dynCall_dii\"] = function() {\n  return (dynCall_dii = Module[\"dynCall_dii\"] = Module[\"asm\"][\"dynCall_dii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = function() {\n  return (dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = function() {\n  return (dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiiij = Module[\"dynCall_iiiiiij\"] = function() {\n  return (dynCall_iiiiiij = Module[\"dynCall_iiiiiij\"] = Module[\"asm\"][\"dynCall_iiiiiij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiijii = Module[\"dynCall_iiiiijii\"] = function() {\n  return (dynCall_iiiiijii = Module[\"dynCall_iiiiijii\"] = Module[\"asm\"][\"dynCall_iiiiijii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiij = Module[\"dynCall_iiiij\"] = function() {\n  return (dynCall_iiiij = Module[\"dynCall_iiiij\"] = Module[\"asm\"][\"dynCall_iiiij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiiji = Module[\"dynCall_iiiiji\"] = function() {\n  return (dynCall_iiiiji = Module[\"dynCall_iiiiji\"] = Module[\"asm\"][\"dynCall_iiiiji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiiijii = Module[\"dynCall_iiiijii\"] = function() {\n  return (dynCall_iiiijii = Module[\"dynCall_iiiijii\"] = Module[\"asm\"][\"dynCall_iiiijii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiij = Module[\"dynCall_iiij\"] = function() {\n  return (dynCall_iiij = Module[\"dynCall_iiij\"] = Module[\"asm\"][\"dynCall_iiij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iij = Module[\"dynCall_iij\"] = function() {\n  return (dynCall_iij = Module[\"dynCall_iij\"] = Module[\"asm\"][\"dynCall_iij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_ij = Module[\"dynCall_ij\"] = function() {\n  return (dynCall_ij = Module[\"dynCall_ij\"] = Module[\"asm\"][\"dynCall_ij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_j = Module[\"dynCall_j\"] = function() {\n  return (dynCall_j = Module[\"dynCall_j\"] = Module[\"asm\"][\"dynCall_j\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jii = Module[\"dynCall_jii\"] = function() {\n  return (dynCall_jii = Module[\"dynCall_jii\"] = Module[\"asm\"][\"dynCall_jii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiij = Module[\"dynCall_jiij\"] = function() {\n  return (dynCall_jiij = Module[\"dynCall_jiij\"] = Module[\"asm\"][\"dynCall_jiij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jj = Module[\"dynCall_jj\"] = function() {\n  return (dynCall_jj = Module[\"dynCall_jj\"] = Module[\"asm\"][\"dynCall_jj\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viidii = Module[\"dynCall_viidii\"] = function() {\n  return (dynCall_viidii = Module[\"dynCall_viidii\"] = Module[\"asm\"][\"dynCall_viidii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiiij = Module[\"dynCall_viiiij\"] = function() {\n  return (dynCall_viiiij = Module[\"dynCall_viiiij\"] = Module[\"asm\"][\"dynCall_viiiij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viij = Module[\"dynCall_viij\"] = function() {\n  return (dynCall_viij = Module[\"dynCall_viij\"] = Module[\"asm\"][\"dynCall_viij\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viiji = Module[\"dynCall_viiji\"] = function() {\n  return (dynCall_viiji = Module[\"dynCall_viiji\"] = Module[\"asm\"][\"dynCall_viiji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_vij = Module[\"dynCall_vij\"] = function() {\n  return (dynCall_vij = Module[\"dynCall_vij\"] = Module[\"asm\"][\"dynCall_vij\"]).apply(null, arguments);\n};\n;\n\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\n\n\n\nModule[\"ccall\"] = ccall;\n\n\n\n\nModule[\"getMemory\"] = getMemory;\n\nModule[\"UTF8ToString\"] = UTF8ToString;\n\n\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\n\n\n\n\n\n\n\n\nModule[\"addRunDependency\"] = addRunDependency;\nModule[\"removeRunDependency\"] = removeRunDependency;\nModule[\"FS_createFolder\"] = FS.createFolder;\nModule[\"FS_createPath\"] = FS.createPath;\nModule[\"FS_createDataFile\"] = FS.createDataFile;\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\nModule[\"FS_createLink\"] = FS.createLink;\nModule[\"FS_createDevice\"] = FS.createDevice;\nModule[\"FS_unlink\"] = FS.unlink;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar calledRun;\n\n/**\n * @constructor\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n}\n\nvar calledMain = false;\n\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction callMain(args) {\n\n  var entryFunction = Module['_main'];\n\n\n  args = args || [];\n\n  var argc = args.length+1;\n  var argv = stackAlloc((argc + 1) * 4);\n  HEAP32[argv >> 2] = allocateUTF8OnStack(thisProgram);\n  for (var i = 1; i < argc; i++) {\n    HEAP32[(argv >> 2) + i] = allocateUTF8OnStack(args[i - 1]);\n  }\n  HEAP32[(argv >> 2) + argc] = 0;\n\n  try {\n\n\n    var ret = entryFunction(argc, argv);\n\n\n    // In PROXY_TO_PTHREAD builds, we should never exit the runtime below, as execution is asynchronously handed\n    // off to a pthread.\n    // if we're not running an evented main loop, it's time to exit\n      exit(ret, /* implicit = */ true);\n  }\n  catch(e) {\n    if (e instanceof ExitStatus) {\n      // exit() throws this once it's done to make sure execution\n      // has been stopped completely\n      return;\n    } else if (e == 'unwind') {\n      // running an evented main loop, don't immediately exit\n      noExitRuntime = true;\n      return;\n    } else {\n      var toLog = e;\n      if (e && typeof e === 'object' && e.stack) {\n        toLog = [e, e.stack];\n      }\n      err('exception thrown: ' + toLog);\n      quit_(1, e);\n    }\n  } finally {\n    calledMain = true;\n  }\n}\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (shouldRunNow) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\nModule['run'] = run;\n\n\n/** @param {boolean|number=} implicit */\nfunction exit(status, implicit) {\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && noExitRuntime && status === 0) {\n    return;\n  }\n\n  if (noExitRuntime) {\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  quit_(status, new ExitStatus(status));\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = false;\n\nif (Module['noInitialRun']) shouldRunNow = false;\n\n\n  noExitRuntime = true;\n\nrun();\n\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\n\n\n  return PHP.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = PHP;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return PHP; });\n    else if (typeof exports === 'object')\n      exports[\"PHP\"] = PHP;\n  })();\n});","\nrequire.register(\"process/browser.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"process\");\n  (function() {\n    // shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n  })();\n});","\"use strict\";\n\nconst PHP = require('php-wasm/PhpWeb').PhpWeb;\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n\tconst input  = document.querySelector('.input  textarea');\n\tconst stdret = document.querySelector('.stdret > * > *');\n\tconst stdout = document.querySelector('.stdout > * > *');\n\tconst stderr = document.querySelector('.stderr > * > *');\n\tconst run    = document.querySelector('[data-run]');\n\tconst status = document.querySelector('[data-status]');\n\tconst editor = ace.edit(input);\n\tconst ret    = document.querySelector('#ret');\n\n\tconst exitBox    = document.querySelector('#exit')\n\tconst exitLabel  = exitBox.querySelector('span');\n\tconst persistBox = document.getElementById('persist');\n\tconst singleBox  = document.getElementById('single-expression');\n\n\teditor.session.setMode(\"ace/mode/php\");\n\teditor.setTheme('ace/theme/monokai')\n\n\tstatus.innerText = 'php-wasm loading...';\n\tconst php = new PHP;\n\n\tconst query = new URLSearchParams(location.search);\n\n\tphp.addEventListener('ready', (event) => {\n\t\tstatus.innerText = 'php-wasm ready!';\n\n\t\trun.addEventListener('click', () => {\n\n\t\t\tstatus.innerText = 'Executing...';\n\n\t\t\twhile(stdout.firstChild)\n\t\t\t{\n\t\t\t\tstdout.firstChild.remove();\n\t\t\t}\n\n\t\t\twhile(stderr.firstChild)\n\t\t\t{\n\t\t\t\tstderr.firstChild.remove();\n\t\t\t}\n\n\t\t\twhile(stdret.firstChild)\n\t\t\t{\n\t\t\t\tstdret.firstChild.remove();\n\t\t\t}\n\n\t\t\tlet code = editor.session.getValue();\n\n\t\t\tif(code.length < 1024)\n\t\t\t{\n\t\t\t\tquery.set('code', encodeURIComponent(code));\n\t\t\t\tquery.set('persist', persistBox.checked ? 1 : 0);\n\t\t\t\thistory.replaceState({}, document.title, \"?\" + query.toString());\n\t\t\t}\n\n\t\t\t// const runCode = code.replace(/^<\\?php/, '');\n\n\t\t\tconsole.log(code);\n\n\t\t\tconst func = singleBox.checked\n\t\t\t\t? 'exec'\n\t\t\t\t: 'run';\n\n\t\t\tif(singleBox.checked)\n\t\t\t{\n\t\t\t\tcode = code.replace(/^\\s*<\\?php/, '');\n\t\t\t\tcode = code.replace(/\\?>\\s*/, '');\n\t\t\t}\n\n\t\t\tconsole.log(func);\n\n\t\t\tphp[func](code).then(ret=>{\n\n\t\t\t\tif(!singleBox.checked)\n\t\t\t\t{\n\t\t\t\t\texitLabel.innerText = ret;\n\t\t\t\t}\n\n\t\t\t\tstatus.innerText = 'php-wasm ready!';\n\n\t\t\t\tconst row = document.createElement('div');\n\n\t\t\t\trow.innerText = ret;\n\t\t\t\trow.setAttribute('tabindex', -1);\n\n\t\t\t\trow.classList.add('row');\n\n\t\t\t\tstdret.append(row);\n\n\t\t\t});\n\n\t\t});\n\t});\n\n\tphp.addEventListener('output', (event) => {\n\n\t\tconsole.log('output', event);\n\n\t\tconst row = document.createElement('div');\n\n\t\trow.innerText = event.detail.join(\"\\n\");\n\t\trow.setAttribute('tabindex', -1);\n\n\t\trow.classList.add('row');\n\n\t\tstdout.append(row);\n\t});\n\n\tphp.addEventListener('error', (event) => {\n\n\t\tconsole.log('error', event);\n\n\t\tconst row = document.createElement('div');\n\n\t\trow.innerText = event.detail.join(\"\\n\");\n\t\trow.setAttribute('tabindex', -1);\n\n\t\trow.classList.add('row');\n\n\t\tstderr.append(row);\n\t});\n\n\tret.style.display = 'none';\n\n\tsingleBox.addEventListener('input', event=>{\n\n\t\tif(event.target.checked)\n\t\t{\n\t\t\texitBox.style.display = 'none';\n\t\t\tret.style.display = 'flex';\n\t\t}\n\t\telse\n\t\t{\n\t\t\texitBox.style.display = 'flex';\n\t\t\tret.style.display = 'none';\n\t\t}\n\n\t\tconsole.log(ret, event.target.checked)\n\n\t});\n\n\texitLabel.innerText = '_';\n\n\tif(query.has('code'))\n\t{\n\t\teditor.setValue(decodeURIComponent(query.get('code')));\n\t\teditor.selection.moveCursorFileStart();\n\t}\n\telse\n\t{\n\t\teditor.setValue(`\n<?php\nfwrite( fopen('php://stdout', 'w'), \"This is STDOUT\\\\n\" );\nfwrite( fopen('php://stderr', 'w'), \"This is STDOUT\\\\n\" );\n`);\n\n\t\teditor.selection.moveCursorFileEnd();\n\t}\n\n\n});\n","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}