{"version":3,"file":"static/js/331.875cb278.chunk.js","mappings":"0MAAAA,EAAAA,EAAAA,KAOO,IAAMC,EAAN,cAAqBC,EAAAA,EAG1BC,WAAAA,CAAYC,GACVC,MAAMD,GACNE,KAAKC,QAAeC,EAAAA,QAAQJ,GACpBK,EAAAA,WAAgBD,EAAAA,KAAKF,KAAKC,WAC7BE,EAAAA,UAAUH,KAAKC,QAEtB,CAEA,oBAAMG,CAAeN,GAYnB,MAXsC,IACjCA,EACHO,OAAQ,IACFP,EAAKO,QAAU,GAClBC,IACC,IAAMC,EAASD,EAAIE,GAAGC,YAAYC,OAClCJ,EAAIE,GAAGG,MAAMC,EAAAA,GACbN,EAAIE,GAAGK,MAAMN,EAAQ,CAAEO,KAAMd,KAAKC,SAAWW,EAAAA,EAC/C,GAIN,CAEA,aAAMG,CACJjB,EACAkB,EACAV,GAEA,OAAOW,EAAAA,EAAAA,GAAQnB,EAAKkB,EAAQV,EAC9B,CAEA,WAAMY,CAAMpB,GACVA,EAAGqB,MACL,E","sources":["../node_modules/@electric-sql/pglite/src/fs/nodefs.ts"],"sourcesContent":["import * as fs from 'fs'\nimport * as path from 'path'\nimport { FilesystemBase } from './types.js'\nimport { PGDATA } from './index.js'\nimport type { PostgresMod, FS } from '../postgresMod.js'\nimport { dumpTar, type DumpTarCompressionOptions } from './tarUtils.js'\n\nexport class NodeFS extends FilesystemBase {\n  protected rootDir: string\n\n  constructor(dataDir: string) {\n    super(dataDir)\n    this.rootDir = path.resolve(dataDir)\n    if (!fs.existsSync(path.join(this.rootDir))) {\n      fs.mkdirSync(this.rootDir)\n    }\n  }\n\n  async emscriptenOpts(opts: Partial<PostgresMod>) {\n    const options: Partial<PostgresMod> = {\n      ...opts,\n      preRun: [\n        ...(opts.preRun || []),\n        (mod: any) => {\n          const nodefs = mod.FS.filesystems.NODEFS\n          mod.FS.mkdir(PGDATA)\n          mod.FS.mount(nodefs, { root: this.rootDir }, PGDATA)\n        },\n      ],\n    }\n    return options\n  }\n\n  async dumpTar(\n    mod: FS,\n    dbname: string,\n    compression?: DumpTarCompressionOptions,\n  ) {\n    return dumpTar(mod, dbname, compression)\n  }\n\n  async close(FS: FS): Promise<void> {\n    FS.quit()\n  }\n}\n"],"names":["p","a","n","constructor","r","super","this","rootDir","t","o","emscriptenOpts","preRun","s","c","FS","filesystems","NODEFS","mkdir","i","mount","root","dumpTar","e","m","close","quit"],"sourceRoot":""}